/**********************************************************************
 * Extern for JSJoda
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var JSJoda = {
  "ArithmeticException": function () {},
  "ChronoField": {
    "ALIGNED_DAY_OF_WEEK_IN_MONTH": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "ALIGNED_DAY_OF_WEEK_IN_YEAR": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "ALIGNED_WEEK_OF_MONTH": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "ALIGNED_WEEK_OF_YEAR": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "AMPM_OF_DAY": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "CLOCK_HOUR_OF_AMPM": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "CLOCK_HOUR_OF_DAY": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "DAY_OF_MONTH": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "DAY_OF_WEEK": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "DAY_OF_YEAR": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "EPOCH_DAY": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "ERA": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "HOUR_OF_AMPM": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "HOUR_OF_DAY": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "INSTANT_SECONDS": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "MICRO_OF_DAY": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "MICRO_OF_SECOND": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "MILLI_OF_DAY": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "MILLI_OF_SECOND": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "MINUTE_OF_DAY": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "MINUTE_OF_HOUR": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "MONTH_OF_YEAR": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "NANO_OF_DAY": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "NANO_OF_SECOND": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "OFFSET_SECONDS": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "PROLEPTIC_MONTH": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "SECOND_OF_DAY": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "SECOND_OF_MINUTE": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "YEAR": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "YEAR_OF_ERA": {
      "_baseUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "_name": {},
      "_range": {
        "_maxLargest": {},
        "_maxSmallest": {},
        "_minLargest": {},
        "_minSmallest": {},
        "checkValidIntValue": function () {},
        "checkValidValue": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "isFixed": function () {},
        "isIntValue": function () {},
        "isValidIntValue": function () {},
        "isValidValue": function () {},
        "largestMinimum": function () {},
        "maximum": function () {},
        "minimum": function () {},
        "smallestMaximum": function () {},
        "toString": function () {}
      },
      "_rangeUnit": {
        "_duration": {
          "_nanos": {},
          "_seconds": {},
          "abs": function () {},
          "addTo": function () {},
          "compareTo": function () {},
          "dividedBy": function () {},
          "equals": function () {},
          "get": function () {},
          "isNegative": function () {},
          "isZero": function () {},
          "minus": function () {},
          "minusAmountUnit": function () {},
          "minusDays": function () {},
          "minusDuration": function () {},
          "minusHours": function () {},
          "minusMillis": function () {},
          "minusMinutes": function () {},
          "minusNanos": function () {},
          "minusSeconds": function () {},
          "multipliedBy": function () {},
          "nano": function () {},
          "negated": function () {},
          "plus": function () {},
          "plusAmountUnit": function () {},
          "plusDays": function () {},
          "plusDuration": function () {},
          "plusHours": function () {},
          "plusMillis": function () {},
          "plusMinutes": function () {},
          "plusNanos": function () {},
          "plusSeconds": function () {},
          "plusSecondsNanos": function () {},
          "seconds": function () {},
          "subtractFrom": function () {},
          "toDays": function () {},
          "toHours": function () {},
          "toJSON": function () {},
          "toMillis": function () {},
          "toMinutes": function () {},
          "toNanos": function () {},
          "toString": function () {},
          "units": function () {},
          "withNanos": function () {},
          "withSeconds": function () {}
        },
        "_name": {},
        "addTo": function () {},
        "between": function () {},
        "compareTo": function () {},
        "duration": function () {},
        "isDateBased": function () {},
        "isDurationEstimated": function () {},
        "isSupportedBy": function () {},
        "isTimeBased": function () {},
        "toString": function () {}
      },
      "baseUnit": function () {},
      "checkValidIntValue": function () {},
      "checkValidValue": function () {},
      "displayName": function () {},
      "equals": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "toString": function () {}
    },
    "byName": function () {}
  },
  "ChronoLocalDate": function () {},
  "ChronoLocalDateTime": function () {},
  "ChronoUnit": {
    "CENTURIES": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "DAYS": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "DECADES": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "ERAS": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "FOREVER": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "HALF_DAYS": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "HOURS": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "MICROS": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "MILLENNIA": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "MILLIS": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "MINUTES": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "MONTHS": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "NANOS": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "SECONDS": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "WEEKS": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "YEARS": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "compareTo": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    }
  },
  "ChronoZonedDateTime": function () {},
  "Clock": {
    "fixed": function () {},
    "offset": function () {},
    "system": function () {},
    "systemDefaultZone": function () {},
    "systemUTC": function () {}
  },
  "DateTimeException": function () {},
  "DateTimeFormatter": {
    "ISO_INSTANT": {
      "_chrono": {},
      "_createError": function () {},
      "_decimalStyle": {
        "_decimalSeparator": {},
        "_negativeSign": {},
        "_positiveSign": {},
        "_zeroDigit": {},
        "_zeroDigitCharCode": {},
        "convertNumberToI18N": function () {},
        "convertToDigit": function () {},
        "decimalSeparator": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "negativeSign": function () {},
        "positiveSign": function () {},
        "toString": function () {},
        "withDecimalSeparator": function () {},
        "withNegativeSign": function () {},
        "withPositiveSign": function () {},
        "withZeroDigit": function () {},
        "zeroDigit": function () {}
      },
      "_formatTo": function () {},
      "_locale": {},
      "_parseToBuilder": function () {},
      "_parseUnresolved0": function () {},
      "_printerParser": {
        "_optional": {},
        "_printerParsers": {},
        "parse": function () {},
        "print": function () {},
        "toString": function () {},
        "withOptional": function () {}
      },
      "_resolverFields": {},
      "_resolverStyle": {
        "_name": {},
        "equals": function () {},
        "toJSON": function () {},
        "toString": function () {}
      },
      "_toPrinterParser": function () {},
      "_zone": {},
      "chronology": function () {},
      "decimalStyle": function () {},
      "format": function () {},
      "locale": function () {},
      "parse": function () {},
      "parse1": function () {},
      "parse2": function () {},
      "parseUnresolved": function () {},
      "toString": function () {},
      "withChronology": function () {},
      "withLocale": function () {},
      "withResolverStyle": function () {}
    },
    "ISO_LOCAL_DATE": {
      "_chrono": {
        "_name": {},
        "_updateResolveMap": function () {},
        "date": function () {},
        "equals": function () {},
        "resolveDate": function () {},
        "toJSON": function () {},
        "toString": function () {}
      },
      "_createError": function () {},
      "_decimalStyle": {
        "_decimalSeparator": {},
        "_negativeSign": {},
        "_positiveSign": {},
        "_zeroDigit": {},
        "_zeroDigitCharCode": {},
        "convertNumberToI18N": function () {},
        "convertToDigit": function () {},
        "decimalSeparator": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "negativeSign": function () {},
        "positiveSign": function () {},
        "toString": function () {},
        "withDecimalSeparator": function () {},
        "withNegativeSign": function () {},
        "withPositiveSign": function () {},
        "withZeroDigit": function () {},
        "zeroDigit": function () {}
      },
      "_formatTo": function () {},
      "_locale": {},
      "_parseToBuilder": function () {},
      "_parseUnresolved0": function () {},
      "_printerParser": {
        "_optional": {},
        "_printerParsers": {},
        "parse": function () {},
        "print": function () {},
        "toString": function () {},
        "withOptional": function () {}
      },
      "_resolverFields": {},
      "_resolverStyle": {
        "_name": {},
        "equals": function () {},
        "toJSON": function () {},
        "toString": function () {}
      },
      "_toPrinterParser": function () {},
      "_zone": {},
      "chronology": function () {},
      "decimalStyle": function () {},
      "format": function () {},
      "locale": function () {},
      "parse": function () {},
      "parse1": function () {},
      "parse2": function () {},
      "parseUnresolved": function () {},
      "toString": function () {},
      "withChronology": function () {},
      "withLocale": function () {},
      "withResolverStyle": function () {}
    },
    "ISO_LOCAL_DATE_TIME": {
      "_chrono": {
        "_name": {},
        "_updateResolveMap": function () {},
        "date": function () {},
        "equals": function () {},
        "resolveDate": function () {},
        "toJSON": function () {},
        "toString": function () {}
      },
      "_createError": function () {},
      "_decimalStyle": {
        "_decimalSeparator": {},
        "_negativeSign": {},
        "_positiveSign": {},
        "_zeroDigit": {},
        "_zeroDigitCharCode": {},
        "convertNumberToI18N": function () {},
        "convertToDigit": function () {},
        "decimalSeparator": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "negativeSign": function () {},
        "positiveSign": function () {},
        "toString": function () {},
        "withDecimalSeparator": function () {},
        "withNegativeSign": function () {},
        "withPositiveSign": function () {},
        "withZeroDigit": function () {},
        "zeroDigit": function () {}
      },
      "_formatTo": function () {},
      "_locale": {},
      "_parseToBuilder": function () {},
      "_parseUnresolved0": function () {},
      "_printerParser": {
        "_optional": {},
        "_printerParsers": {},
        "parse": function () {},
        "print": function () {},
        "toString": function () {},
        "withOptional": function () {}
      },
      "_resolverFields": {},
      "_resolverStyle": {
        "_name": {},
        "equals": function () {},
        "toJSON": function () {},
        "toString": function () {}
      },
      "_toPrinterParser": function () {},
      "_zone": {},
      "chronology": function () {},
      "decimalStyle": function () {},
      "format": function () {},
      "locale": function () {},
      "parse": function () {},
      "parse1": function () {},
      "parse2": function () {},
      "parseUnresolved": function () {},
      "toString": function () {},
      "withChronology": function () {},
      "withLocale": function () {},
      "withResolverStyle": function () {}
    },
    "ISO_LOCAL_TIME": {
      "_chrono": {},
      "_createError": function () {},
      "_decimalStyle": {
        "_decimalSeparator": {},
        "_negativeSign": {},
        "_positiveSign": {},
        "_zeroDigit": {},
        "_zeroDigitCharCode": {},
        "convertNumberToI18N": function () {},
        "convertToDigit": function () {},
        "decimalSeparator": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "negativeSign": function () {},
        "positiveSign": function () {},
        "toString": function () {},
        "withDecimalSeparator": function () {},
        "withNegativeSign": function () {},
        "withPositiveSign": function () {},
        "withZeroDigit": function () {},
        "zeroDigit": function () {}
      },
      "_formatTo": function () {},
      "_locale": {},
      "_parseToBuilder": function () {},
      "_parseUnresolved0": function () {},
      "_printerParser": {
        "_optional": {},
        "_printerParsers": {},
        "parse": function () {},
        "print": function () {},
        "toString": function () {},
        "withOptional": function () {}
      },
      "_resolverFields": {},
      "_resolverStyle": {
        "_name": {},
        "equals": function () {},
        "toJSON": function () {},
        "toString": function () {}
      },
      "_toPrinterParser": function () {},
      "_zone": {},
      "chronology": function () {},
      "decimalStyle": function () {},
      "format": function () {},
      "locale": function () {},
      "parse": function () {},
      "parse1": function () {},
      "parse2": function () {},
      "parseUnresolved": function () {},
      "toString": function () {},
      "withChronology": function () {},
      "withLocale": function () {},
      "withResolverStyle": function () {}
    },
    "ISO_OFFSET_DATE_TIME": {
      "_chrono": {
        "_name": {},
        "_updateResolveMap": function () {},
        "date": function () {},
        "equals": function () {},
        "resolveDate": function () {},
        "toJSON": function () {},
        "toString": function () {}
      },
      "_createError": function () {},
      "_decimalStyle": {
        "_decimalSeparator": {},
        "_negativeSign": {},
        "_positiveSign": {},
        "_zeroDigit": {},
        "_zeroDigitCharCode": {},
        "convertNumberToI18N": function () {},
        "convertToDigit": function () {},
        "decimalSeparator": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "negativeSign": function () {},
        "positiveSign": function () {},
        "toString": function () {},
        "withDecimalSeparator": function () {},
        "withNegativeSign": function () {},
        "withPositiveSign": function () {},
        "withZeroDigit": function () {},
        "zeroDigit": function () {}
      },
      "_formatTo": function () {},
      "_locale": {},
      "_parseToBuilder": function () {},
      "_parseUnresolved0": function () {},
      "_printerParser": {
        "_optional": {},
        "_printerParsers": {},
        "parse": function () {},
        "print": function () {},
        "toString": function () {},
        "withOptional": function () {}
      },
      "_resolverFields": {},
      "_resolverStyle": {
        "_name": {},
        "equals": function () {},
        "toJSON": function () {},
        "toString": function () {}
      },
      "_toPrinterParser": function () {},
      "_zone": {},
      "chronology": function () {},
      "decimalStyle": function () {},
      "format": function () {},
      "locale": function () {},
      "parse": function () {},
      "parse1": function () {},
      "parse2": function () {},
      "parseUnresolved": function () {},
      "toString": function () {},
      "withChronology": function () {},
      "withLocale": function () {},
      "withResolverStyle": function () {}
    },
    "ISO_ZONED_DATE_TIME": {
      "_chrono": {
        "_name": {},
        "_updateResolveMap": function () {},
        "date": function () {},
        "equals": function () {},
        "resolveDate": function () {},
        "toJSON": function () {},
        "toString": function () {}
      },
      "_createError": function () {},
      "_decimalStyle": {
        "_decimalSeparator": {},
        "_negativeSign": {},
        "_positiveSign": {},
        "_zeroDigit": {},
        "_zeroDigitCharCode": {},
        "convertNumberToI18N": function () {},
        "convertToDigit": function () {},
        "decimalSeparator": function () {},
        "equals": function () {},
        "hashCode": function () {},
        "negativeSign": function () {},
        "positiveSign": function () {},
        "toString": function () {},
        "withDecimalSeparator": function () {},
        "withNegativeSign": function () {},
        "withPositiveSign": function () {},
        "withZeroDigit": function () {},
        "zeroDigit": function () {}
      },
      "_formatTo": function () {},
      "_locale": {},
      "_parseToBuilder": function () {},
      "_parseUnresolved0": function () {},
      "_printerParser": {
        "_optional": {},
        "_printerParsers": {},
        "parse": function () {},
        "print": function () {},
        "toString": function () {},
        "withOptional": function () {}
      },
      "_resolverFields": {},
      "_resolverStyle": {
        "_name": {},
        "equals": function () {},
        "toJSON": function () {},
        "toString": function () {}
      },
      "_toPrinterParser": function () {},
      "_zone": {},
      "chronology": function () {},
      "decimalStyle": function () {},
      "format": function () {},
      "locale": function () {},
      "parse": function () {},
      "parse1": function () {},
      "parse2": function () {},
      "parseUnresolved": function () {},
      "toString": function () {},
      "withChronology": function () {},
      "withLocale": function () {},
      "withResolverStyle": function () {}
    },
    "PARSED_EXCESS_DAYS": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "PARSED_LEAP_SECOND": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "ofPattern": function () {},
    "parsedExcessDays": function () {},
    "parsedLeapSecond": function () {}
  },
  "DateTimeFormatterBuilder": {
    "CharLiteralPrinterParser": function () {},
    "CompositePrinterParser": function () {},
    "FractionPrinterParser": function () {},
    "NumberPrinterParser": function () {},
    "OffsetIdPrinterParser": {
      "INSTANCE_ID": {
        "_checkPattern": function () {},
        "_parseNumber": function () {},
        "noOffsetText": {},
        "parse": function () {},
        "print": function () {},
        "toString": function () {},
        "type": {}
      },
      "PATTERNS": {}
    },
    "PadPrinterParserDecorator": function () {},
    "ReducedPrinterParser": {
      "BASE_DATE": {
        "_compareTo0": function () {},
        "_day": {},
        "_get0": function () {},
        "_month": {},
        "_monthsUntil": function () {},
        "_prolepticMonth": function () {},
        "_year": {},
        "adjustInto": function () {},
        "atStartOfDay": function () {},
        "atStartOfDayWithZone": function () {},
        "atTime": function () {},
        "atTime1": function () {},
        "atTime4": function () {},
        "chronology": function () {},
        "compareTo": function () {},
        "dayOfMonth": function () {},
        "dayOfWeek": function () {},
        "dayOfYear": function () {},
        "daysUntil": function () {},
        "equals": function () {},
        "format": function () {},
        "get": function () {},
        "getLong": function () {},
        "hashCode": function () {},
        "isAfter": function () {},
        "isBefore": function () {},
        "isEqual": function () {},
        "isLeapYear": function () {},
        "isSupported": function () {},
        "isoWeekOfWeekyear": function () {},
        "isoWeekyear": function () {},
        "lengthOfMonth": function () {},
        "lengthOfYear": function () {},
        "minus": function () {},
        "minus1": function () {},
        "minus2": function () {},
        "minusDays": function () {},
        "minusMonths": function () {},
        "minusWeeks": function () {},
        "minusYears": function () {},
        "month": function () {},
        "monthValue": function () {},
        "plus": function () {},
        "plus1": function () {},
        "plus2": function () {},
        "plusDays": function () {},
        "plusMonths": function () {},
        "plusWeeks": function () {},
        "plusYears": function () {},
        "query": function () {},
        "range": function () {},
        "toEpochDay": function () {},
        "toJSON": function () {},
        "toString": function () {},
        "until": function () {},
        "until1": function () {},
        "until2": function () {},
        "with": function () {},
        "withDayOfMonth": function () {},
        "withDayOfYear": function () {},
        "withFieldAndValue": function () {},
        "withMonth": function () {},
        "withTemporalAdjuster": function () {},
        "withYear": function () {},
        "year": function () {}
      }
    },
    "SettingsParser": {
      "INSENSITIVE": {
        "_name": {},
        "equals": function () {},
        "parse": function () {},
        "print": function () {},
        "toJSON": function () {},
        "toString": function () {}
      },
      "LENIENT": {
        "_name": {},
        "equals": function () {},
        "parse": function () {},
        "print": function () {},
        "toJSON": function () {},
        "toString": function () {}
      },
      "SENSITIVE": {
        "_name": {},
        "equals": function () {},
        "parse": function () {},
        "print": function () {},
        "toJSON": function () {},
        "toString": function () {}
      },
      "STRICT": {
        "_name": {},
        "equals": function () {},
        "parse": function () {},
        "print": function () {},
        "toJSON": function () {},
        "toString": function () {}
      }
    },
    "StringLiteralPrinterParser": function () {},
    "ZoneIdPrinterParser": function () {},
    "_of": function () {}
  },
  "DateTimeParseException": function () {},
  "DayOfWeek": {
    "FRIDAY": {
      "_name": {},
      "_ordinal": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "FROM": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "MONDAY": {
      "_name": {},
      "_ordinal": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "SATURDAY": {
      "_name": {},
      "_ordinal": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "SUNDAY": {
      "_name": {},
      "_ordinal": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "THURSDAY": {
      "_name": {},
      "_ordinal": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "TUESDAY": {
      "_name": {},
      "_ordinal": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "WEDNESDAY": {
      "_name": {},
      "_ordinal": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "from": function () {},
    "of": function () {},
    "valueOf": function () {},
    "values": function () {}
  },
  "DecimalStyle": {
    "STANDARD": {
      "_decimalSeparator": {},
      "_negativeSign": {},
      "_positiveSign": {},
      "_zeroDigit": {},
      "_zeroDigitCharCode": {},
      "convertNumberToI18N": function () {},
      "convertToDigit": function () {},
      "decimalSeparator": function () {},
      "equals": function () {},
      "hashCode": function () {},
      "negativeSign": function () {},
      "positiveSign": function () {},
      "toString": function () {},
      "withDecimalSeparator": function () {},
      "withNegativeSign": function () {},
      "withPositiveSign": function () {},
      "withZeroDigit": function () {},
      "zeroDigit": function () {}
    },
    "availableLocales": function () {},
    "of": function () {}
  },
  "Duration": {
    "ZERO": {
      "_nanos": {},
      "_seconds": {},
      "abs": function () {},
      "addTo": function () {},
      "compareTo": function () {},
      "dividedBy": function () {},
      "equals": function () {},
      "get": function () {},
      "isNegative": function () {},
      "isZero": function () {},
      "minus": function () {},
      "minusAmountUnit": function () {},
      "minusDays": function () {},
      "minusDuration": function () {},
      "minusHours": function () {},
      "minusMillis": function () {},
      "minusMinutes": function () {},
      "minusNanos": function () {},
      "minusSeconds": function () {},
      "multipliedBy": function () {},
      "nano": function () {},
      "negated": function () {},
      "plus": function () {},
      "plusAmountUnit": function () {},
      "plusDays": function () {},
      "plusDuration": function () {},
      "plusHours": function () {},
      "plusMillis": function () {},
      "plusMinutes": function () {},
      "plusNanos": function () {},
      "plusSeconds": function () {},
      "plusSecondsNanos": function () {},
      "seconds": function () {},
      "subtractFrom": function () {},
      "toDays": function () {},
      "toHours": function () {},
      "toJSON": function () {},
      "toMillis": function () {},
      "toMinutes": function () {},
      "toNanos": function () {},
      "toString": function () {},
      "units": function () {},
      "withNanos": function () {},
      "withSeconds": function () {}
    },
    "_create": function () {},
    "_createNegateDaysHoursMinutesSecondsNanos": function () {},
    "_createSecondsNanos": function () {},
    "_parseFraction": function () {},
    "_parseNumber": function () {},
    "between": function () {},
    "from": function () {},
    "of": function () {},
    "ofDays": function () {},
    "ofHours": function () {},
    "ofMillis": function () {},
    "ofMinutes": function () {},
    "ofNanos": function () {},
    "ofSeconds": function () {},
    "parse": function () {}
  },
  "IllegalArgumentException": function () {},
  "IllegalStateException": function () {},
  "Instant": {
    "EPOCH": {
      "_nanos": {},
      "_nanosUntil": function () {},
      "_plus": function () {},
      "_seconds": {},
      "_secondsUntil": function () {},
      "adjustInto": function () {},
      "atZone": function () {},
      "compareTo": function () {},
      "epochSecond": function () {},
      "equals": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "isAfter": function () {},
      "isBefore": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "minus1": function () {},
      "minus2": function () {},
      "minusMillis": function () {},
      "minusNanos": function () {},
      "minusSeconds": function () {},
      "nano": function () {},
      "plus": function () {},
      "plus1": function () {},
      "plus2": function () {},
      "plusMillis": function () {},
      "plusNanos": function () {},
      "plusSeconds": function () {},
      "query": function () {},
      "range": function () {},
      "toEpochMilli": function () {},
      "ofEpochMilli": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "truncatedTo": function () {},
      "until": function () {},
      "with": function () {},
      "with2": function () {},
      "withTemporalAdjuster": function () {}
    },
    "FROM": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "MAX": {
      "_nanos": {},
      "_nanosUntil": function () {},
      "_plus": function () {},
      "_seconds": {},
      "_secondsUntil": function () {},
      "adjustInto": function () {},
      "atZone": function () {},
      "compareTo": function () {},
      "epochSecond": function () {},
      "equals": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "isAfter": function () {},
      "isBefore": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "minus1": function () {},
      "minus2": function () {},
      "minusMillis": function () {},
      "minusNanos": function () {},
      "minusSeconds": function () {},
      "nano": function () {},
      "plus": function () {},
      "plus1": function () {},
      "plus2": function () {},
      "plusMillis": function () {},
      "plusNanos": function () {},
      "plusSeconds": function () {},
      "query": function () {},
      "range": function () {},
      "toEpochMilli": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "truncatedTo": function () {},
      "until": function () {},
      "with": function () {},
      "with2": function () {},
      "withTemporalAdjuster": function () {}
    },
    "MAX_SECONDS": {},
    "MIN": {
      "_nanos": {},
      "_nanosUntil": function () {},
      "_plus": function () {},
      "_seconds": {},
      "_secondsUntil": function () {},
      "adjustInto": function () {},
      "atZone": function () {},
      "compareTo": function () {},
      "epochSecond": function () {},
      "equals": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "isAfter": function () {},
      "isBefore": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "minus1": function () {},
      "minus2": function () {},
      "minusMillis": function () {},
      "minusNanos": function () {},
      "minusSeconds": function () {},
      "nano": function () {},
      "plus": function () {},
      "plus1": function () {},
      "plus2": function () {},
      "plusMillis": function () {},
      "plusNanos": function () {},
      "plusSeconds": function () {},
      "query": function () {},
      "range": function () {},
      "toEpochMilli": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "truncatedTo": function () {},
      "until": function () {},
      "with": function () {},
      "with2": function () {},
      "withTemporalAdjuster": function () {}
    },
    "MIN_SECONDS": {},
    "_create": function () {},
    "_validate": function () {},
    "from": function () {},
    "now": function () {},
    "ofEpochMilli": function () {},
    "ofEpochSecond": function () {},
    "parse": function () {}
  },
  "IsoChronology": {
    "INSTANCE": {
      "_name": {},
      "_updateResolveMap": function () {},
      "date": function () {},
      "equals": function () {},
      "resolveDate": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "isLeapYear": function () {}
  },
  "IsoFields": {
    "DAY_OF_QUARTER": {
      "_isIso": function () {},
      "adjustInto": function () {},
      "baseUnit": function () {},
      "getDisplayName": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "resolve": function () {},
      "toString": function () {}
    },
    "QUARTER_OF_YEAR": {
      "_isIso": function () {},
      "adjustInto": function () {},
      "baseUnit": function () {},
      "getDisplayName": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "resolve": function () {},
      "toString": function () {}
    },
    "QUARTER_YEARS": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "WEEK_BASED_YEAR": {
      "_isIso": function () {},
      "adjustInto": function () {},
      "baseUnit": function () {},
      "getDisplayName": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "resolve": function () {},
      "toString": function () {}
    },
    "WEEK_BASED_YEARS": {
      "_duration": {
        "_nanos": {},
        "_seconds": {},
        "abs": function () {},
        "addTo": function () {},
        "compareTo": function () {},
        "dividedBy": function () {},
        "equals": function () {},
        "get": function () {},
        "isNegative": function () {},
        "isZero": function () {},
        "minus": function () {},
        "minusAmountUnit": function () {},
        "minusDays": function () {},
        "minusDuration": function () {},
        "minusHours": function () {},
        "minusMillis": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "multipliedBy": function () {},
        "nano": function () {},
        "negated": function () {},
        "plus": function () {},
        "plusAmountUnit": function () {},
        "plusDays": function () {},
        "plusDuration": function () {},
        "plusHours": function () {},
        "plusMillis": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "plusSecondsNanos": function () {},
        "seconds": function () {},
        "subtractFrom": function () {},
        "toDays": function () {},
        "toHours": function () {},
        "toJSON": function () {},
        "toMillis": function () {},
        "toMinutes": function () {},
        "toNanos": function () {},
        "toString": function () {},
        "units": function () {},
        "withNanos": function () {},
        "withSeconds": function () {}
      },
      "_name": {},
      "addTo": function () {},
      "between": function () {},
      "duration": function () {},
      "isDateBased": function () {},
      "isDurationEstimated": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "toString": function () {}
    },
    "WEEK_OF_WEEK_BASED_YEAR": {
      "_isIso": function () {},
      "adjustInto": function () {},
      "baseUnit": function () {},
      "getDisplayName": function () {},
      "getFrom": function () {},
      "isDateBased": function () {},
      "isSupportedBy": function () {},
      "isTimeBased": function () {},
      "name": function () {},
      "range": function () {},
      "rangeRefinedBy": function () {},
      "rangeUnit": function () {},
      "resolve": function () {},
      "toString": function () {}
    }
  },
  "LocalDate": {
    "EPOCH_0": {
      "_compareTo0": function () {},
      "_day": {},
      "_get0": function () {},
      "_month": {},
      "_monthsUntil": function () {},
      "_prolepticMonth": function () {},
      "_year": {},
      "adjustInto": function () {},
      "atStartOfDay": function () {},
      "atStartOfDayWithZone": function () {},
      "atTime": function () {},
      "atTime1": function () {},
      "atTime4": function () {},
      "chronology": function () {},
      "compareTo": function () {},
      "dayOfMonth": function () {},
      "dayOfWeek": function () {},
      "dayOfYear": function () {},
      "daysUntil": function () {},
      "equals": function () {},
      "format": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "isAfter": function () {},
      "isBefore": function () {},
      "isEqual": function () {},
      "isLeapYear": function () {},
      "isSupported": function () {},
      "isoWeekOfWeekyear": function () {},
      "isoWeekyear": function () {},
      "lengthOfMonth": function () {},
      "lengthOfYear": function () {},
      "minus": function () {},
      "minus1": function () {},
      "minus2": function () {},
      "minusDays": function () {},
      "minusMonths": function () {},
      "minusWeeks": function () {},
      "minusYears": function () {},
      "month": function () {},
      "monthValue": function () {},
      "plus": function () {},
      "plus1": function () {},
      "plus2": function () {},
      "plusDays": function () {},
      "plusMonths": function () {},
      "plusWeeks": function () {},
      "plusYears": function () {},
      "query": function () {},
      "range": function () {},
      "toEpochDay": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "until": function () {},
      "until1": function () {},
      "until2": function () {},
      "with": function () {},
      "withDayOfMonth": function () {},
      "withDayOfYear": function () {},
      "withFieldAndValue": function () {},
      "withMonth": function () {},
      "withTemporalAdjuster": function () {},
      "withYear": function () {},
      "year": function () {}
    },
    "FROM": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "MAX": {
      "_compareTo0": function () {},
      "_day": {},
      "_get0": function () {},
      "_month": {},
      "_monthsUntil": function () {},
      "_prolepticMonth": function () {},
      "_year": {},
      "adjustInto": function () {},
      "atStartOfDay": function () {},
      "atStartOfDayWithZone": function () {},
      "atTime": function () {},
      "atTime1": function () {},
      "atTime4": function () {},
      "chronology": function () {},
      "compareTo": function () {},
      "dayOfMonth": function () {},
      "dayOfWeek": function () {},
      "dayOfYear": function () {},
      "daysUntil": function () {},
      "equals": function () {},
      "format": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "isAfter": function () {},
      "isBefore": function () {},
      "isEqual": function () {},
      "isLeapYear": function () {},
      "isSupported": function () {},
      "isoWeekOfWeekyear": function () {},
      "isoWeekyear": function () {},
      "lengthOfMonth": function () {},
      "lengthOfYear": function () {},
      "minus": function () {},
      "minus1": function () {},
      "minus2": function () {},
      "minusDays": function () {},
      "minusMonths": function () {},
      "minusWeeks": function () {},
      "minusYears": function () {},
      "month": function () {},
      "monthValue": function () {},
      "plus": function () {},
      "plus1": function () {},
      "plus2": function () {},
      "plusDays": function () {},
      "plusMonths": function () {},
      "plusWeeks": function () {},
      "plusYears": function () {},
      "query": function () {},
      "range": function () {},
      "toEpochDay": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "until": function () {},
      "until1": function () {},
      "until2": function () {},
      "with": function () {},
      "withDayOfMonth": function () {},
      "withDayOfYear": function () {},
      "withFieldAndValue": function () {},
      "withMonth": function () {},
      "withTemporalAdjuster": function () {},
      "withYear": function () {},
      "year": function () {}
    },
    "MIN": {
      "_compareTo0": function () {},
      "_day": {},
      "_get0": function () {},
      "_month": {},
      "_monthsUntil": function () {},
      "_prolepticMonth": function () {},
      "_year": {},
      "adjustInto": function () {},
      "atStartOfDay": function () {},
      "atStartOfDayWithZone": function () {},
      "atTime": function () {},
      "atTime1": function () {},
      "atTime4": function () {},
      "chronology": function () {},
      "compareTo": function () {},
      "dayOfMonth": function () {},
      "dayOfWeek": function () {},
      "dayOfYear": function () {},
      "daysUntil": function () {},
      "equals": function () {},
      "format": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "isAfter": function () {},
      "isBefore": function () {},
      "isEqual": function () {},
      "isLeapYear": function () {},
      "isSupported": function () {},
      "isoWeekOfWeekyear": function () {},
      "isoWeekyear": function () {},
      "lengthOfMonth": function () {},
      "lengthOfYear": function () {},
      "minus": function () {},
      "minus1": function () {},
      "minus2": function () {},
      "minusDays": function () {},
      "minusMonths": function () {},
      "minusWeeks": function () {},
      "minusYears": function () {},
      "month": function () {},
      "monthValue": function () {},
      "plus": function () {},
      "plus1": function () {},
      "plus2": function () {},
      "plusDays": function () {},
      "plusMonths": function () {},
      "plusWeeks": function () {},
      "plusYears": function () {},
      "query": function () {},
      "range": function () {},
      "toEpochDay": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "until": function () {},
      "until1": function () {},
      "until2": function () {},
      "with": function () {},
      "withDayOfMonth": function () {},
      "withDayOfYear": function () {},
      "withFieldAndValue": function () {},
      "withMonth": function () {},
      "withTemporalAdjuster": function () {},
      "withYear": function () {},
      "year": function () {}
    },
    "_resolvePreviousValid": function () {},
    "_validate": function () {},
    "from": function () {},
    "now": function () {},
    "of": function () {},
    "ofEpochDay": function () {},
    "ofInstant": function () {},
    "ofYearDay": function () {},
    "parse": function () {}
  },
  "LocalDateTime": {
    "FROM": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "MAX": {
      "_compareTo0": function () {},
      "_date": {
        "_compareTo0": function () {},
        "_day": {},
        "_get0": function () {},
        "_month": {},
        "_monthsUntil": function () {},
        "_prolepticMonth": function () {},
        "_year": {},
        "adjustInto": function () {},
        "atStartOfDay": function () {},
        "atStartOfDayWithZone": function () {},
        "atTime": function () {},
        "atTime1": function () {},
        "atTime4": function () {},
        "chronology": function () {},
        "compareTo": function () {},
        "dayOfMonth": function () {},
        "dayOfWeek": function () {},
        "dayOfYear": function () {},
        "daysUntil": function () {},
        "equals": function () {},
        "format": function () {},
        "get": function () {},
        "getLong": function () {},
        "hashCode": function () {},
        "isAfter": function () {},
        "isBefore": function () {},
        "isEqual": function () {},
        "isLeapYear": function () {},
        "isSupported": function () {},
        "isoWeekOfWeekyear": function () {},
        "isoWeekyear": function () {},
        "lengthOfMonth": function () {},
        "lengthOfYear": function () {},
        "minus": function () {},
        "minus1": function () {},
        "minus2": function () {},
        "minusDays": function () {},
        "minusMonths": function () {},
        "minusWeeks": function () {},
        "minusYears": function () {},
        "month": function () {},
        "monthValue": function () {},
        "plus": function () {},
        "plus1": function () {},
        "plus2": function () {},
        "plusDays": function () {},
        "plusMonths": function () {},
        "plusWeeks": function () {},
        "plusYears": function () {},
        "query": function () {},
        "range": function () {},
        "toEpochDay": function () {},
        "toJSON": function () {},
        "toString": function () {},
        "until": function () {},
        "until1": function () {},
        "until2": function () {},
        "with": function () {},
        "withDayOfMonth": function () {},
        "withDayOfYear": function () {},
        "withFieldAndValue": function () {},
        "withMonth": function () {},
        "withTemporalAdjuster": function () {},
        "withYear": function () {},
        "year": function () {}
      },
      "_plusWithOverflow": function () {},
      "_time": {
        "_get0": function () {},
        "_hour": {},
        "_minute": {},
        "_nano": {},
        "_second": {},
        "adjustInto": function () {},
        "atDate": function () {},
        "compareTo": function () {},
        "equals": function () {},
        "format": function () {},
        "get": function () {},
        "getLong": function () {},
        "hashCode": function () {},
        "hour": function () {},
        "isAfter": function () {},
        "isBefore": function () {},
        "isSupported": function () {},
        "minus": function () {},
        "minus1": function () {},
        "minus2": function () {},
        "minusHours": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "minute": function () {},
        "nano": function () {},
        "plus": function () {},
        "plus1": function () {},
        "plus2": function () {},
        "plusHours": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "query": function () {},
        "range": function () {},
        "second": function () {},
        "toJSON": function () {},
        "toNanoOfDay": function () {},
        "toSecondOfDay": function () {},
        "toString": function () {},
        "truncatedTo": function () {},
        "until": function () {},
        "with": function () {},
        "with2": function () {},
        "withHour": function () {},
        "withMinute": function () {},
        "withNano": function () {},
        "withSecond": function () {},
        "withTemporalAdjuster": function () {}
      },
      "_withDateTime": function () {},
      "adjustInto": function () {},
      "atZone": function () {},
      "chronology": function () {},
      "compareTo": function () {},
      "dayOfMonth": function () {},
      "dayOfWeek": function () {},
      "dayOfYear": function () {},
      "equals": function () {},
      "format": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "hour": function () {},
      "isAfter": function () {},
      "isBefore": function () {},
      "isEqual": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "minus2": function () {},
      "minusDays": function () {},
      "minusHours": function () {},
      "minusMinutes": function () {},
      "minusMonths": function () {},
      "minusNanos": function () {},
      "minusSeconds": function () {},
      "minusTemporalAmount": function () {},
      "minusWeeks": function () {},
      "minusYears": function () {},
      "minute": function () {},
      "month": function () {},
      "monthValue": function () {},
      "nano": function () {},
      "plus": function () {},
      "plus2": function () {},
      "plusDays": function () {},
      "plusHours": function () {},
      "plusMinutes": function () {},
      "plusMonths": function () {},
      "plusNanos": function () {},
      "plusSeconds": function () {},
      "plusTemporalAmount": function () {},
      "plusWeeks": function () {},
      "plusYears": function () {},
      "query": function () {},
      "range": function () {},
      "second": function () {},
      "toEpochSecond": function () {},
      "toInstant": function () {},
      "toJSON": function () {},
      "toLocalDate": function () {},
      "toLocalTime": function () {},
      "toString": function () {},
      "truncatedTo": function () {},
      "until": function () {},
      "with": function () {},
      "with2": function () {},
      "withDayOfMonth": function () {},
      "withDayOfYear": function () {},
      "withHour": function () {},
      "withMinute": function () {},
      "withMonth": function () {},
      "withNano": function () {},
      "withSecond": function () {},
      "withTemporalAdjuster": function () {},
      "withYear": function () {},
      "year": function () {}
    },
    "MIN": {
      "_compareTo0": function () {},
      "_date": {
        "_compareTo0": function () {},
        "_day": {},
        "_get0": function () {},
        "_month": {},
        "_monthsUntil": function () {},
        "_prolepticMonth": function () {},
        "_year": {},
        "adjustInto": function () {},
        "atStartOfDay": function () {},
        "atStartOfDayWithZone": function () {},
        "atTime": function () {},
        "atTime1": function () {},
        "atTime4": function () {},
        "chronology": function () {},
        "compareTo": function () {},
        "dayOfMonth": function () {},
        "dayOfWeek": function () {},
        "dayOfYear": function () {},
        "daysUntil": function () {},
        "equals": function () {},
        "format": function () {},
        "get": function () {},
        "getLong": function () {},
        "hashCode": function () {},
        "isAfter": function () {},
        "isBefore": function () {},
        "isEqual": function () {},
        "isLeapYear": function () {},
        "isSupported": function () {},
        "isoWeekOfWeekyear": function () {},
        "isoWeekyear": function () {},
        "lengthOfMonth": function () {},
        "lengthOfYear": function () {},
        "minus": function () {},
        "minus1": function () {},
        "minus2": function () {},
        "minusDays": function () {},
        "minusMonths": function () {},
        "minusWeeks": function () {},
        "minusYears": function () {},
        "month": function () {},
        "monthValue": function () {},
        "plus": function () {},
        "plus1": function () {},
        "plus2": function () {},
        "plusDays": function () {},
        "plusMonths": function () {},
        "plusWeeks": function () {},
        "plusYears": function () {},
        "query": function () {},
        "range": function () {},
        "toEpochDay": function () {},
        "toJSON": function () {},
        "toString": function () {},
        "until": function () {},
        "until1": function () {},
        "until2": function () {},
        "with": function () {},
        "withDayOfMonth": function () {},
        "withDayOfYear": function () {},
        "withFieldAndValue": function () {},
        "withMonth": function () {},
        "withTemporalAdjuster": function () {},
        "withYear": function () {},
        "year": function () {}
      },
      "_plusWithOverflow": function () {},
      "_time": {
        "_get0": function () {},
        "_hour": {},
        "_minute": {},
        "_nano": {},
        "_second": {},
        "adjustInto": function () {},
        "atDate": function () {},
        "compareTo": function () {},
        "equals": function () {},
        "format": function () {},
        "get": function () {},
        "getLong": function () {},
        "hashCode": function () {},
        "hour": function () {},
        "isAfter": function () {},
        "isBefore": function () {},
        "isSupported": function () {},
        "minus": function () {},
        "minus1": function () {},
        "minus2": function () {},
        "minusHours": function () {},
        "minusMinutes": function () {},
        "minusNanos": function () {},
        "minusSeconds": function () {},
        "minute": function () {},
        "nano": function () {},
        "plus": function () {},
        "plus1": function () {},
        "plus2": function () {},
        "plusHours": function () {},
        "plusMinutes": function () {},
        "plusNanos": function () {},
        "plusSeconds": function () {},
        "query": function () {},
        "range": function () {},
        "second": function () {},
        "toJSON": function () {},
        "toNanoOfDay": function () {},
        "toSecondOfDay": function () {},
        "toString": function () {},
        "truncatedTo": function () {},
        "until": function () {},
        "with": function () {},
        "with2": function () {},
        "withHour": function () {},
        "withMinute": function () {},
        "withNano": function () {},
        "withSecond": function () {},
        "withTemporalAdjuster": function () {}
      },
      "_withDateTime": function () {},
      "adjustInto": function () {},
      "atZone": function () {},
      "chronology": function () {},
      "compareTo": function () {},
      "dayOfMonth": function () {},
      "dayOfWeek": function () {},
      "dayOfYear": function () {},
      "equals": function () {},
      "format": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "hour": function () {},
      "isAfter": function () {},
      "isBefore": function () {},
      "isEqual": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "minus2": function () {},
      "minusDays": function () {},
      "minusHours": function () {},
      "minusMinutes": function () {},
      "minusMonths": function () {},
      "minusNanos": function () {},
      "minusSeconds": function () {},
      "minusTemporalAmount": function () {},
      "minusWeeks": function () {},
      "minusYears": function () {},
      "minute": function () {},
      "month": function () {},
      "monthValue": function () {},
      "nano": function () {},
      "plus": function () {},
      "plus2": function () {},
      "plusDays": function () {},
      "plusHours": function () {},
      "plusMinutes": function () {},
      "plusMonths": function () {},
      "plusNanos": function () {},
      "plusSeconds": function () {},
      "plusTemporalAmount": function () {},
      "plusWeeks": function () {},
      "plusYears": function () {},
      "query": function () {},
      "range": function () {},
      "second": function () {},
      "toEpochSecond": function () {},
      "toInstant": function () {},
      "toJSON": function () {},
      "toLocalDate": function () {},
      "toLocalTime": function () {},
      "toString": function () {},
      "truncatedTo": function () {},
      "until": function () {},
      "with": function () {},
      "with2": function () {},
      "withDayOfMonth": function () {},
      "withDayOfYear": function () {},
      "withHour": function () {},
      "withMinute": function () {},
      "withMonth": function () {},
      "withNano": function () {},
      "withSecond": function () {},
      "withTemporalAdjuster": function () {},
      "withYear": function () {},
      "year": function () {}
    },
    "_now": function () {},
    "_ofEpochMillis": function () {},
    "from": function () {},
    "now": function () {},
    "of": function () {},
    "ofDateAndTime": function () {},
    "ofEpochSecond": function () {},
    "ofInstant": function () {},
    "ofNumbers": function () {},
    "parse": function () {}
  },
  "LocalTime": {
    "FROM": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "HOURS": {},
    "HOURS_PER_DAY": {},
    "MAX": {
      "_get0": function () {},
      "_hour": {},
      "_minute": {},
      "_nano": {},
      "_second": {},
      "adjustInto": function () {},
      "atDate": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "format": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "hour": function () {},
      "isAfter": function () {},
      "isBefore": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "minus1": function () {},
      "minus2": function () {},
      "minusHours": function () {},
      "minusMinutes": function () {},
      "minusNanos": function () {},
      "minusSeconds": function () {},
      "minute": function () {},
      "nano": function () {},
      "plus": function () {},
      "plus1": function () {},
      "plus2": function () {},
      "plusHours": function () {},
      "plusMinutes": function () {},
      "plusNanos": function () {},
      "plusSeconds": function () {},
      "query": function () {},
      "range": function () {},
      "second": function () {},
      "toJSON": function () {},
      "toNanoOfDay": function () {},
      "toSecondOfDay": function () {},
      "toString": function () {},
      "truncatedTo": function () {},
      "until": function () {},
      "with": function () {},
      "with2": function () {},
      "withHour": function () {},
      "withMinute": function () {},
      "withNano": function () {},
      "withSecond": function () {},
      "withTemporalAdjuster": function () {}
    },
    "MICROS_PER_DAY": {},
    "MIDNIGHT": {
      "_get0": function () {},
      "_hour": {},
      "_minute": {},
      "_nano": {},
      "_second": {},
      "adjustInto": function () {},
      "atDate": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "format": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "hour": function () {},
      "isAfter": function () {},
      "isBefore": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "minus1": function () {},
      "minus2": function () {},
      "minusHours": function () {},
      "minusMinutes": function () {},
      "minusNanos": function () {},
      "minusSeconds": function () {},
      "minute": function () {},
      "nano": function () {},
      "plus": function () {},
      "plus1": function () {},
      "plus2": function () {},
      "plusHours": function () {},
      "plusMinutes": function () {},
      "plusNanos": function () {},
      "plusSeconds": function () {},
      "query": function () {},
      "range": function () {},
      "second": function () {},
      "toJSON": function () {},
      "toNanoOfDay": function () {},
      "toSecondOfDay": function () {},
      "toString": function () {},
      "truncatedTo": function () {},
      "until": function () {},
      "with": function () {},
      "with2": function () {},
      "withHour": function () {},
      "withMinute": function () {},
      "withNano": function () {},
      "withSecond": function () {},
      "withTemporalAdjuster": function () {}
    },
    "MILLIS_PER_DAY": {},
    "MIN": {
      "_get0": function () {},
      "_hour": {},
      "_minute": {},
      "_nano": {},
      "_second": {},
      "adjustInto": function () {},
      "atDate": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "format": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "hour": function () {},
      "isAfter": function () {},
      "isBefore": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "minus1": function () {},
      "minus2": function () {},
      "minusHours": function () {},
      "minusMinutes": function () {},
      "minusNanos": function () {},
      "minusSeconds": function () {},
      "minute": function () {},
      "nano": function () {},
      "plus": function () {},
      "plus1": function () {},
      "plus2": function () {},
      "plusHours": function () {},
      "plusMinutes": function () {},
      "plusNanos": function () {},
      "plusSeconds": function () {},
      "query": function () {},
      "range": function () {},
      "second": function () {},
      "toJSON": function () {},
      "toNanoOfDay": function () {},
      "toSecondOfDay": function () {},
      "toString": function () {},
      "truncatedTo": function () {},
      "until": function () {},
      "with": function () {},
      "with2": function () {},
      "withHour": function () {},
      "withMinute": function () {},
      "withNano": function () {},
      "withSecond": function () {},
      "withTemporalAdjuster": function () {}
    },
    "MINUTES_PER_DAY": {},
    "MINUTES_PER_HOUR": {},
    "NANOS_PER_DAY": {},
    "NANOS_PER_HOUR": {},
    "NANOS_PER_MINUTE": {},
    "NANOS_PER_SECOND": {},
    "NOON": {
      "_get0": function () {},
      "_hour": {},
      "_minute": {},
      "_nano": {},
      "_second": {},
      "adjustInto": function () {},
      "atDate": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "format": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "hour": function () {},
      "isAfter": function () {},
      "isBefore": function () {},
      "isSupported": function () {},
      "minus": function () {},
      "minus1": function () {},
      "minus2": function () {},
      "minusHours": function () {},
      "minusMinutes": function () {},
      "minusNanos": function () {},
      "minusSeconds": function () {},
      "minute": function () {},
      "nano": function () {},
      "plus": function () {},
      "plus1": function () {},
      "plus2": function () {},
      "plusHours": function () {},
      "plusMinutes": function () {},
      "plusNanos": function () {},
      "plusSeconds": function () {},
      "query": function () {},
      "range": function () {},
      "second": function () {},
      "toJSON": function () {},
      "toNanoOfDay": function () {},
      "toSecondOfDay": function () {},
      "toString": function () {},
      "truncatedTo": function () {},
      "until": function () {},
      "with": function () {},
      "with2": function () {},
      "withHour": function () {},
      "withMinute": function () {},
      "withNano": function () {},
      "withSecond": function () {},
      "withTemporalAdjuster": function () {}
    },
    "SECONDS_PER_DAY": {},
    "SECONDS_PER_HOUR": {},
    "SECONDS_PER_MINUTE": {},
    "_now": function () {},
    "_validate": function () {},
    "from": function () {},
    "now": function () {},
    "of": function () {},
    "ofInstant": function () {},
    "ofNanoOfDay": function () {},
    "ofSecondOfDay": function () {},
    "parse": function () {}
  },
  "Month": {
    "APRIL": {
      "_name": {},
      "_value": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "firstDayOfYear": function () {},
      "firstMonthOfQuarter": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "length": function () {},
      "maxLength": function () {},
      "minLength": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "AUGUST": {
      "_name": {},
      "_value": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "firstDayOfYear": function () {},
      "firstMonthOfQuarter": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "length": function () {},
      "maxLength": function () {},
      "minLength": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "DECEMBER": {
      "_name": {},
      "_value": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "firstDayOfYear": function () {},
      "firstMonthOfQuarter": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "length": function () {},
      "maxLength": function () {},
      "minLength": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "FEBRUARY": {
      "_name": {},
      "_value": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "firstDayOfYear": function () {},
      "firstMonthOfQuarter": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "length": function () {},
      "maxLength": function () {},
      "minLength": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "JANUARY": {
      "_name": {},
      "_value": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "firstDayOfYear": function () {},
      "firstMonthOfQuarter": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "length": function () {},
      "maxLength": function () {},
      "minLength": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "JULY": {
      "_name": {},
      "_value": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "firstDayOfYear": function () {},
      "firstMonthOfQuarter": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "length": function () {},
      "maxLength": function () {},
      "minLength": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "JUNE": {
      "_name": {},
      "_value": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "firstDayOfYear": function () {},
      "firstMonthOfQuarter": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "length": function () {},
      "maxLength": function () {},
      "minLength": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "MARCH": {
      "_name": {},
      "_value": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "firstDayOfYear": function () {},
      "firstMonthOfQuarter": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "length": function () {},
      "maxLength": function () {},
      "minLength": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "MAY": {
      "_name": {},
      "_value": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "firstDayOfYear": function () {},
      "firstMonthOfQuarter": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "length": function () {},
      "maxLength": function () {},
      "minLength": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "NOVEMBER": {
      "_name": {},
      "_value": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "firstDayOfYear": function () {},
      "firstMonthOfQuarter": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "length": function () {},
      "maxLength": function () {},
      "minLength": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "OCTOBER": {
      "_name": {},
      "_value": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "firstDayOfYear": function () {},
      "firstMonthOfQuarter": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "length": function () {},
      "maxLength": function () {},
      "minLength": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "SEPTEMBER": {
      "_name": {},
      "_value": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "firstDayOfYear": function () {},
      "firstMonthOfQuarter": function () {},
      "get": function () {},
      "getDisplayName": function () {},
      "getLong": function () {},
      "isSupported": function () {},
      "length": function () {},
      "maxLength": function () {},
      "minLength": function () {},
      "minus": function () {},
      "name": function () {},
      "ordinal": function () {},
      "plus": function () {},
      "query": function () {},
      "range": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "value": function () {}
    },
    "from": function () {},
    "of": function () {},
    "valueOf": function () {},
    "values": function () {}
  },
  "MonthDay": {
    "FROM": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "from": function () {},
    "now": function () {},
    "now0": function () {},
    "nowClock": function () {},
    "nowZoneId": function () {},
    "of": function () {},
    "ofMonthNumber": function () {},
    "ofNumberNumber": function () {},
    "parse": function () {},
    "parseString": function () {},
    "parseStringFormatter": function () {}
  },
  "NullPointerException": function () {},
  "Period": {
    "ZERO": {
      "_days": {},
      "_months": {},
      "_years": {},
      "of": function () {},
      "ofDays": function () {},
      "ofWeeks": function () {},
      "ofMonths": function () {},
      "ofYears": function () {},
      "addTo": function () {},
      "chronology": function () {},
      "days": function () {},
      "equals": function () {},
      "get": function () {},
      "hashCode": function () {},
      "isNegative": function () {},
      "isZero": function () {},
      "minus": function () {},
      "minusDays": function () {},
      "minusMonths": function () {},
      "minusYears": function () {},
      "months": function () {},
      "multipliedBy": function () {},
      "negated": function () {},
      "normalized": function () {},
      "plus": function () {},
      "plusDays": function () {},
      "plusMonths": function () {},
      "plusYears": function () {},
      "subtractFrom": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "toTotalMonths": function () {},
      "units": function () {},
      "withDays": function () {},
      "withMonths": function () {},
      "withYears": function () {},
      "years": function () {}
    },
    "_parse": function () {},
    "_parseNumber": function () {},
    "between": function () {},
    "create": function () {},
    "from": function () {},
    "of": function () {},
    "ofDays": function () {},
    "ofMonths": function () {},
    "ofWeeks": function () {},
    "ofYears": function () {},
    "parse": function () {}
  },
  "ResolverStyle": {
    "LENIENT": {
      "_name": {},
      "equals": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "SMART": {
      "_name": {},
      "equals": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "STRICT": {
      "_name": {},
      "equals": function () {},
      "toJSON": function () {},
      "toString": function () {}
    }
  },
  "SignStyle": {
    "ALWAYS": {
      "_name": {},
      "equals": function () {},
      "parse": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "EXCEEDS_PAD": {
      "_name": {},
      "equals": function () {},
      "parse": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "NEVER": {
      "_name": {},
      "equals": function () {},
      "parse": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "NORMAL": {
      "_name": {},
      "equals": function () {},
      "parse": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "NOT_NEGATIVE": {
      "_name": {},
      "equals": function () {},
      "parse": function () {},
      "toJSON": function () {},
      "toString": function () {}
    }
  },
  "Temporal": function () {},
  "TemporalAccessor": function () {},
  "TemporalAdjuster": function () {},
  "TemporalAdjusters": {
    "dayOfWeekInMonth": function () {},
    "firstDayOfMonth": function () {},
    "firstDayOfNextMonth": function () {},
    "firstDayOfNextYear": function () {},
    "firstDayOfYear": function () {},
    "firstInMonth": function () {},
    "lastDayOfMonth": function () {},
    "lastDayOfYear": function () {},
    "lastInMonth": function () {},
    "next": function () {},
    "nextOrSame": function () {},
    "previous": function () {},
    "previousOrSame": function () {}
  },
  "TemporalAmount": function () {},
  "TemporalField": function () {},
  "TemporalQueries": {
    "CHRONO": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "LOCAL_DATE": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "LOCAL_TIME": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "OFFSET": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "PRECISION": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "ZONE": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "ZONE_ID": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "chronology": function () {},
    "localDate": function () {},
    "localTime": function () {},
    "offset": function () {},
    "precision": function () {},
    "zone": function () {},
    "zoneId": function () {}
  },
  "TemporalQuery": function () {},
  "TemporalUnit": function () {},
  "TextStyle": {
    "FULL": {
      "_name": {},
      "asNormal": function () {},
      "asStandalone": function () {},
      "equals": function () {},
      "isStandalone": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "FULL_STANDALONE": {
      "_name": {},
      "asNormal": function () {},
      "asStandalone": function () {},
      "equals": function () {},
      "isStandalone": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "NARROW": {
      "_name": {},
      "asNormal": function () {},
      "asStandalone": function () {},
      "equals": function () {},
      "isStandalone": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "NARROW_STANDALONE": {
      "_name": {},
      "asNormal": function () {},
      "asStandalone": function () {},
      "equals": function () {},
      "isStandalone": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "SHORT": {
      "_name": {},
      "asNormal": function () {},
      "asStandalone": function () {},
      "equals": function () {},
      "isStandalone": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "SHORT_STANDALONE": {
      "_name": {},
      "asNormal": function () {},
      "asStandalone": function () {},
      "equals": function () {},
      "isStandalone": function () {},
      "toJSON": function () {},
      "toString": function () {}
    }
  },
  "UnsupportedTemporalTypeException": function () {},
  "ValueRange": {
    "of": function () {}
  },
  "Year": {
    "FROM": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "MAX_VALUE": {},
    "MIN_VALUE": {},
    "from": function () {},
    "isLeap": function () {},
    "now": function () {},
    "now0": function () {},
    "nowClock": function () {},
    "nowZoneId": function () {},
    "of": function () {},
    "parse": function () {},
    "parseText": function () {},
    "parseTextFormatter": function () {}
  },
  "YearConstants": {
    "MAX_VALUE": {},
    "MIN_VALUE": {}
  },
  "YearMonth": {
    "FROM": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "from": function () {},
    "now": function () {},
    "now0": function () {},
    "nowClock": function () {},
    "nowZoneId": function () {},
    "of": function () {},
    "ofNumberMonth": function () {},
    "ofNumberNumber": function () {},
    "parse": function () {},
    "parseString": function () {},
    "parseStringFormatter": function () {}
  },
  "ZoneId": {
    "SYSTEM": {
      "_rules": {
        "_throwNotSupported": function () {},
        "daylightSavings": function () {},
        "equals": function () {},
        "isDaylightSavings": function () {},
        "isFixedOffset": function () {},
        "isValidOffset": function () {},
        "nextTransition": function () {},
        "offset": function () {},
        "offsetOfEpochMilli": function () {},
        "offsetOfInstant": function () {},
        "offsetOfLocalDateTime": function () {},
        "previousTransition": function () {},
        "standardOffset": function () {},
        "toJSON": function () {},
        "toString": function () {},
        "transition": function () {},
        "transitionRules": function () {},
        "transitions": function () {},
        "validOffsets": function () {},
        "systemDefault": function () {}
      },
      "equals": function () {},
      "hashCode": function () {},
      "id": function () {},
      "normalized": function () {},
      "rules": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "UTC": {
      "_id": {},
      "_rules": {
        "_offset": {},
        "daylightSavings": function () {},
        "equals": function () {},
        "isDaylightSavings": function () {},
        "isFixedOffset": function () {},
        "isValidOffset": function () {},
        "nextTransition": function () {},
        "offset": function () {},
        "offsetOfEpochMilli": function () {},
        "offsetOfInstant": function () {},
        "offsetOfLocalDateTime": function () {},
        "previousTransition": function () {},
        "standardOffset": function () {},
        "toJSON": function () {},
        "toString": function () {},
        "transition": function () {},
        "transitionRules": function () {},
        "transitions": function () {},
        "validOffsets": function () {}
      },
      "_totalSeconds": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "id": function () {},
      "normalized": function () {},
      "query": function () {},
      "rules": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "totalSeconds": function () {}
    },
    "from": function () {},
    "getAvailableZoneIds": function () {},
    "of": function () {},
    "ofOffset": function () {},
    "systemDefault": function () {}
  },
  "ZoneOffset": {
    "MAX": {
      "_id": {},
      "_rules": {
        "_offset": {},
        "daylightSavings": function () {},
        "equals": function () {},
        "isDaylightSavings": function () {},
        "isFixedOffset": function () {},
        "isValidOffset": function () {},
        "nextTransition": function () {},
        "offset": function () {},
        "offsetOfEpochMilli": function () {},
        "offsetOfInstant": function () {},
        "offsetOfLocalDateTime": function () {},
        "previousTransition": function () {},
        "standardOffset": function () {},
        "toJSON": function () {},
        "toString": function () {},
        "transition": function () {},
        "transitionRules": function () {},
        "transitions": function () {},
        "validOffsets": function () {}
      },
      "_totalSeconds": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "id": function () {},
      "normalized": function () {},
      "query": function () {},
      "rules": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "totalSeconds": function () {}
    },
    "MAX_SECONDS": {},
    "MIN": {
      "_id": {},
      "_rules": {
        "_offset": {},
        "daylightSavings": function () {},
        "equals": function () {},
        "isDaylightSavings": function () {},
        "isFixedOffset": function () {},
        "isValidOffset": function () {},
        "nextTransition": function () {},
        "offset": function () {},
        "offsetOfEpochMilli": function () {},
        "offsetOfInstant": function () {},
        "offsetOfLocalDateTime": function () {},
        "previousTransition": function () {},
        "standardOffset": function () {},
        "toJSON": function () {},
        "toString": function () {},
        "transition": function () {},
        "transitionRules": function () {},
        "transitions": function () {},
        "validOffsets": function () {}
      },
      "_totalSeconds": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "id": function () {},
      "normalized": function () {},
      "query": function () {},
      "rules": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "totalSeconds": function () {}
    },
    "SYSTEM": {
      "_rules": {
        "_throwNotSupported": function () {},
        "daylightSavings": function () {},
        "equals": function () {},
        "isDaylightSavings": function () {},
        "isFixedOffset": function () {},
        "isValidOffset": function () {},
        "nextTransition": function () {},
        "offset": function () {},
        "offsetOfEpochMilli": function () {},
        "offsetOfInstant": function () {},
        "offsetOfLocalDateTime": function () {},
        "previousTransition": function () {},
        "standardOffset": function () {},
        "toJSON": function () {},
        "toString": function () {},
        "transition": function () {},
        "transitionRules": function () {},
        "transitions": function () {},
        "validOffsets": function () {}
      },
      "equals": function () {},
      "hashCode": function () {},
      "id": function () {},
      "normalized": function () {},
      "rules": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "UTC": {
      "_id": {},
      "_rules": {
        "_offset": {},
        "daylightSavings": function () {},
        "equals": function () {},
        "isDaylightSavings": function () {},
        "isFixedOffset": function () {},
        "isValidOffset": function () {},
        "nextTransition": function () {},
        "offset": function () {},
        "offsetOfEpochMilli": function () {},
        "offsetOfInstant": function () {},
        "offsetOfLocalDateTime": function () {},
        "previousTransition": function () {},
        "standardOffset": function () {},
        "toJSON": function () {},
        "toString": function () {},
        "transition": function () {},
        "transitionRules": function () {},
        "transitions": function () {},
        "validOffsets": function () {}
      },
      "_totalSeconds": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "id": function () {},
      "normalized": function () {},
      "query": function () {},
      "rules": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "totalSeconds": function () {}
    },
    "_buildId": function () {},
    "_parseNumber": function () {},
    "_validate": function () {},
    "_validateTotalSeconds": function () {},
    "from": function () {},
    "getAvailableZoneIds": function () {},
    "of": function () {},
    "ofHours": function () {},
    "ofHoursMinutes": function () {},
    "ofHoursMinutesSeconds": function () {},
    "ofOffset": function () {},
    "ofTotalMinutes": function () {},
    "ofTotalSeconds": function () {},
    "systemDefault": function () {}
  },
  "ZoneOffsetTransition": {
    "of": function () {}
  },
  "ZoneRegion": {
    "SYSTEM": {
      "_rules": {
        "_throwNotSupported": function () {},
        "daylightSavings": function () {},
        "equals": function () {},
        "isDaylightSavings": function () {},
        "isFixedOffset": function () {},
        "isValidOffset": function () {},
        "nextTransition": function () {},
        "offset": function () {},
        "offsetOfEpochMilli": function () {},
        "offsetOfInstant": function () {},
        "offsetOfLocalDateTime": function () {},
        "previousTransition": function () {},
        "standardOffset": function () {},
        "toJSON": function () {},
        "toString": function () {},
        "transition": function () {},
        "transitionRules": function () {},
        "transitions": function () {},
        "validOffsets": function () {}
      },
      "equals": function () {},
      "hashCode": function () {},
      "id": function () {},
      "normalized": function () {},
      "rules": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "UTC": {
      "_id": {},
      "_rules": {
        "_offset": {},
        "daylightSavings": function () {},
        "equals": function () {},
        "isDaylightSavings": function () {},
        "isFixedOffset": function () {},
        "isValidOffset": function () {},
        "nextTransition": function () {},
        "offset": function () {},
        "offsetOfEpochMilli": function () {},
        "offsetOfInstant": function () {},
        "offsetOfLocalDateTime": function () {},
        "previousTransition": function () {},
        "standardOffset": function () {},
        "toJSON": function () {},
        "toString": function () {},
        "transition": function () {},
        "transitionRules": function () {},
        "transitions": function () {},
        "validOffsets": function () {}
      },
      "_totalSeconds": {},
      "adjustInto": function () {},
      "compareTo": function () {},
      "equals": function () {},
      "get": function () {},
      "getLong": function () {},
      "hashCode": function () {},
      "id": function () {},
      "normalized": function () {},
      "query": function () {},
      "rules": function () {},
      "toJSON": function () {},
      "toString": function () {},
      "totalSeconds": function () {}
    },
    "from": function () {},
    "getAvailableZoneIds": function () {},
    "of": function () {},
    "ofId": function () {},
    "ofOffset": function () {},
    "systemDefault": function () {}
  },
  "ZoneRules": {
    "of": function () {}
  },
  "ZoneRulesProvider": {
    "getAvailableZoneIds": function () {},
    "getRules": function () {}
  },
  "ZonedDateTime": {
    "FROM": {
      "_name": {},
      "equals": function () {},
      "queryFrom": function () {},
      "toJSON": function () {},
      "toString": function () {}
    },
    "__from": function () {},
    "_create": function () {},
    "_from": function () {},
    "from": function () {},
    "now": function () {},
    "of": function () {},
    "of2": function () {},
    "of3": function () {},
    "of8": function () {},
    "ofInstant": function () {},
    "ofInstant2": function () {},
    "ofInstant3": function () {},
    "ofLenient": function () {},
    "ofLocal": function () {},
    "ofStrict": function () {},
    "parse": function () {}
  },
  "_": {
    "DateTimeBuilder": {
      "create": function () {}
    },
    "DateTimeParseContext": function () {},
    "DateTimePrintContext": {
      "adjust": function () {}
    },
    "MathUtil": {
      "MAX_SAFE_INTEGER": {},
      "MIN_SAFE_INTEGER": {},
      "compareNumbers": function () {},
      "floorDiv": function () {},
      "floorMod": function () {},
      "hash": function () {},
      "hashCode": function () {},
      "intDiv": function () {},
      "intMod": function () {},
      "parseInt": {
        "toString": function () {}
      },
      "roundDown": function () {},
      "safeAdd": function () {},
      "safeMultiply": function () {},
      "safeSubtract": function () {},
      "safeToInt": function () {},
      "safeZero": function () {},
      "smi": function () {},
      "verifyInt": function () {}
    },
    "StringBuilder": function () {},
    "StringUtil": {
      "hashCode": function () {},
      "startsWith": function () {}
    },
    "assert": {
      "abstractMethodFail": function () {},
      "assert": function () {},
      "requireInstance": function () {},
      "requireNonNull": function () {}
    }
  },
  "convert": function () {},
  "nativeJs": function () {},
  "use": function () {}
};
JSJoda.ArithmeticException.prototype = {
  "constructor": function () {},
  "name": function () {}
};
JSJoda.ChronoField.prototype = {
  "baseUnit": function () {},
  "checkValidIntValue": function () {},
  "checkValidValue": function () {},
  "displayName": function () {},
  "equals": function () {},
  "getFrom": function () {},
  "isDateBased": function () {},
  "isTimeBased": function () {},
  "name": function () {},
  "range": function () {},
  "rangeRefinedBy": function () {},
  "rangeUnit": function () {},
  "toString": function () {}
};
JSJoda.ChronoLocalDate.prototype = {
  "adjustInto": function () {},
  "format": function () {},
  "get": function () {},
  "isSupported": function () {},
  "query": function () {},
  "range": function () {}
};
JSJoda.ChronoLocalDateTime.prototype = {
  "adjustInto": function () {},
  "chronology": function () {},
  "get": function () {},
  "query": function () {},
  "range": function () {},
  "toEpochSecond": function () {},
  "toInstant": function () {}
};
JSJoda.ChronoUnit.prototype = {
  "addTo": function () {},
  "between": function () {},
  "compareTo": function () {},
  "duration": function () {},
  "isDateBased": function () {},
  "isDurationEstimated": function () {},
  "isSupportedBy": function () {},
  "isTimeBased": function () {},
  "toString": function () {}
};
JSJoda.ChronoZonedDateTime.prototype = {
  "compareTo": function () {},
  "equals": function () {},
  "format": function () {},
  "get": function () {},
  "isAfter": function () {},
  "isBefore": function () {},
  "isEqual": function () {},
  "query": function () {},
  "range": function () {},
  "toEpochSecond": function () {},
  "toInstant": function () {}
};
JSJoda.Clock.prototype = {
  "instant": function () {},
  "millis": function () {},
  "withZone": function () {},
  "zone": function () {}
};
JSJoda.DateTimeException.prototype = {
  "constructor": function () {},
  "name": function () {}
};
JSJoda.DateTimeFormatter.prototype = {
  "_createError": function () {},
  "_formatTo": function () {},
  "_parseToBuilder": function () {},
  "_parseUnresolved0": function () {},
  "_toPrinterParser": function () {},
  "chronology": function () {},
  "decimalStyle": function () {},
  "format": function () {},
  "locale": function () {},
  "parse": function () {},
  "parse1": function () {},
  "parse2": function () {},
  "parseUnresolved": function () {},
  "toString": function () {},
  "withChronology": function () {},
  "withLocale": function () {},
  "withResolverStyle": function () {},
  "ofPattern": function () {}
};
JSJoda.DateTimeFormatterBuilder.prototype = {
  "_appendInternal": function () {},
  "_appendInternalPrinterParser": function () {},
  "_appendValue1": function () {},
  "_appendValue2": function () {},
  "_appendValue4": function () {},
  "_appendValuePrinterParser": function () {},
  "_appendValueReducedFieldWidthMaxWidthBaseDate": function () {},
  "_appendValueReducedFieldWidthMaxWidthBaseValue": function () {},
  "_padNext1": function () {},
  "_padNext2": function () {},
  "_parseField": function () {},
  "_parsePattern": function () {},
  "append": function () {},
  "appendFraction": function () {},
  "appendInstant": function () {},
  "appendLiteral": function () {},
  "appendLocalizedOffset": function () {},
  "appendOffset": function () {},
  "appendOffsetId": function () {},
  "appendPattern": function () {},
  "appendText": function () {},
  "appendValue": function () {},
  "appendValueReduced": function () {},
  "appendWeekField": function () {},
  "appendZoneId": function () {},
  "appendZoneText": function () {},
  "optionalEnd": function () {},
  "optionalStart": function () {},
  "padNext": function () {},
  "parseCaseInsensitive": function () {},
  "parseCaseSensitive": function () {},
  "parseLenient": function () {},
  "parseStrict": function () {},
  "toFormatter": function () {}
};
JSJoda.DateTimeFormatterBuilder.CharLiteralPrinterParser.prototype = {
  "parse": function () {},
  "print": function () {},
  "toString": function () {}
};
JSJoda.DateTimeFormatterBuilder.CompositePrinterParser.prototype = {
  "parse": function () {},
  "print": function () {},
  "toString": function () {},
  "withOptional": function () {}
};
JSJoda.DateTimeFormatterBuilder.FractionPrinterParser.prototype = {
  "convertFromFraction": function () {},
  "convertToFraction": function () {},
  "parse": function () {},
  "print": function () {},
  "toString": function () {}
};
JSJoda.DateTimeFormatterBuilder.NumberPrinterParser.prototype = {
  "_getValue": function () {},
  "_isFixedWidth": function () {},
  "_setValue": function () {},
  "field": function () {},
  "maxWidth": function () {},
  "minWidth": function () {},
  "parse": function () {},
  "print": function () {},
  "signStyle": function () {},
  "toString": function () {},
  "withFixedWidth": function () {},
  "withSubsequentWidth": function () {}
};
JSJoda.DateTimeFormatterBuilder.OffsetIdPrinterParser.prototype = {
  "_checkPattern": function () {},
  "_parseNumber": function () {},
  "parse": function () {},
  "print": function () {},
  "toString": function () {}
};
JSJoda.DateTimeFormatterBuilder.PadPrinterParserDecorator.prototype = {
  "parse": function () {},
  "print": function () {},
  "toString": function () {}
};
JSJoda.DateTimeFormatterBuilder.ReducedPrinterParser.prototype = {
  "_getValue": function () {},
  "_isFixedWidth": function () {},
  "_setValue": function () {},
  "field": function () {},
  "isFixedWidth": function () {},
  "maxWidth": function () {},
  "minWidth": function () {},
  "parse": function () {},
  "print": function () {},
  "signStyle": function () {},
  "toString": function () {},
  "withFixedWidth": function () {},
  "withSubsequentWidth": function () {}
};
JSJoda.DateTimeFormatterBuilder.SettingsParser.prototype = {
  "equals": function () {},
  "parse": function () {},
  "print": function () {},
  "toJSON": function () {},
  "toString": function () {}
};
JSJoda.DateTimeFormatterBuilder.StringLiteralPrinterParser.prototype = {
  "parse": function () {},
  "print": function () {},
  "toString": function () {}
};
JSJoda.DateTimeFormatterBuilder.ZoneIdPrinterParser.prototype = {
  "_parsePrefixedOffset": function () {},
  "parse": function () {},
  "print": function () {},
  "toString": function () {}
};
JSJoda.DateTimeParseException.prototype = {
  "constructor": function () {},
  "name": function () {}
};
JSJoda.DayOfWeek.prototype = {
  "adjustInto": function () {},
  "compareTo": function () {},
  "equals": function () {},
  "get": function () {},
  "getDisplayName": function () {},
  "getLong": function () {},
  "isSupported": function () {},
  "minus": function () {},
  "name": function () {},
  "ordinal": function () {},
  "plus": function () {},
  "query": function () {},
  "range": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "value": function () {}
};
JSJoda.DecimalStyle.prototype = {
  "convertNumberToI18N": function () {},
  "convertToDigit": function () {},
  "decimalSeparator": function () {},
  "equals": function () {},
  "hashCode": function () {},
  "negativeSign": function () {},
  "positiveSign": function () {},
  "toString": function () {},
  "withDecimalSeparator": function () {},
  "withNegativeSign": function () {},
  "withPositiveSign": function () {},
  "withZeroDigit": function () {},
  "zeroDigit": function () {}
};
JSJoda.Duration.prototype = {
  "abs": function () {},
  "addTo": function () {},
  "compareTo": function () {},
  "dividedBy": function () {},
  "equals": function () {},
  "get": function () {},
  "isNegative": function () {},
  "isZero": function () {},
  "minus": function () {},
  "minusAmountUnit": function () {},
  "minusDays": function () {},
  "minusDuration": function () {},
  "minusHours": function () {},
  "minusMillis": function () {},
  "minusMinutes": function () {},
  "minusNanos": function () {},
  "minusSeconds": function () {},
  "multipliedBy": function () {},
  "nano": function () {},
  "negated": function () {},
  "plus": function () {},
  "plusAmountUnit": function () {},
  "plusDays": function () {},
  "plusDuration": function () {},
  "plusHours": function () {},
  "plusMillis": function () {},
  "plusMinutes": function () {},
  "plusNanos": function () {},
  "plusSeconds": function () {},
  "plusSecondsNanos": function () {},
  "seconds": function () {},
  "subtractFrom": function () {},
  "toDays": function () {},
  "toHours": function () {},
  "toJSON": function () {},
  "toMillis": function () {},
  "toMinutes": function () {},
  "toNanos": function () {},
  "toString": function () {},
  "units": function () {},
  "withNanos": function () {},
  "withSeconds": function () {}
};
JSJoda.IllegalArgumentException.prototype = {
  "constructor": function () {},
  "name": function () {}
};
JSJoda.IllegalStateException.prototype = {
  "constructor": function () {},
  "name": function () {}
};
JSJoda.Instant.prototype = {
  "_nanosUntil": function () {},
  "_plus": function () {},
  "_secondsUntil": function () {},
  "adjustInto": function () {},
  "atZone": function () {},
  "compareTo": function () {},
  "epochSecond": function () {},
  "equals": function () {},
  "get": function () {},
  "getLong": function () {},
  "hashCode": function () {},
  "isAfter": function () {},
  "isBefore": function () {},
  "isSupported": function () {},
  "minus": function () {},
  "minus1": function () {},
  "minus2": function () {},
  "minusMillis": function () {},
  "minusNanos": function () {},
  "minusSeconds": function () {},
  "nano": function () {},
  "plus": function () {},
  "plus1": function () {},
  "plus2": function () {},
  "plusMillis": function () {},
  "plusNanos": function () {},
  "plusSeconds": function () {},
  "query": function () {},
  "range": function () {},
  "toEpochMilli": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "truncatedTo": function () {},
  "until": function () {},
  "with": function () {},
  "with2": function () {},
  "withTemporalAdjuster": function () {}
};
JSJoda.IsoChronology.prototype = {
  "_updateResolveMap": function () {},
  "date": function () {},
  "equals": function () {},
  "resolveDate": function () {},
  "toJSON": function () {},
  "toString": function () {}
};
JSJoda.LocalDate.prototype = {
  "_compareTo0": function () {},
  "_get0": function () {},
  "_monthsUntil": function () {},
  "_prolepticMonth": function () {},
  "adjustInto": function () {},
  "atStartOfDay": function () {},
  "atStartOfDayWithZone": function () {},
  "atTime": function () {},
  "atTime1": function () {},
  "atTime4": function () {},
  "chronology": function () {},
  "compareTo": function () {},
  "dayOfMonth": function () {},
  "dayOfWeek": function () {},
  "dayOfYear": function () {},
  "daysUntil": function () {},
  "equals": function () {},
  "format": function () {},
  "get": function () {},
  "getLong": function () {},
  "hashCode": function () {},
  "isAfter": function () {},
  "isBefore": function () {},
  "isEqual": function () {},
  "isLeapYear": function () {},
  "isSupported": function () {},
  "isoWeekOfWeekyear": function () {},
  "isoWeekyear": function () {},
  "lengthOfMonth": function () {},
  "lengthOfYear": function () {},
  "minus": function () {},
  "minus1": function () {},
  "minus2": function () {},
  "minusDays": function () {},
  "minusMonths": function () {},
  "minusWeeks": function () {},
  "minusYears": function () {},
  "month": function () {},
  "monthValue": function () {},
  "plus": function () {},
  "plus1": function () {},
  "plus2": function () {},
  "plusDays": function () {},
  "plusMonths": function () {},
  "plusWeeks": function () {},
  "plusYears": function () {},
  "query": function () {},
  "range": function () {},
  "toEpochDay": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "until": function () {},
  "until1": function () {},
  "until2": function () {},
  "with": function () {},
  "withDayOfMonth": function () {},
  "withDayOfYear": function () {},
  "withFieldAndValue": function () {},
  "withMonth": function () {},
  "withTemporalAdjuster": function () {},
  "withYear": function () {},
  "year": function () {}
};
JSJoda.LocalDateTime.prototype = {
  "_compareTo0": function () {},
  "_plusWithOverflow": function () {},
  "_withDateTime": function () {},
  "adjustInto": function () {},
  "atZone": function () {},
  "chronology": function () {},
  "compareTo": function () {},
  "dayOfMonth": function () {},
  "dayOfWeek": function () {},
  "dayOfYear": function () {},
  "equals": function () {},
  "format": function () {},
  "get": function () {},
  "getLong": function () {},
  "hashCode": function () {},
  "hour": function () {},
  "isAfter": function () {},
  "isBefore": function () {},
  "isEqual": function () {},
  "isSupported": function () {},
  "minus": function () {},
  "minus2": function () {},
  "minusDays": function () {},
  "minusHours": function () {},
  "minusMinutes": function () {},
  "minusMonths": function () {},
  "minusNanos": function () {},
  "minusSeconds": function () {},
  "minusTemporalAmount": function () {},
  "minusWeeks": function () {},
  "minusYears": function () {},
  "minute": function () {},
  "month": function () {},
  "monthValue": function () {},
  "nano": function () {},
  "plus": function () {},
  "plus2": function () {},
  "plusDays": function () {},
  "plusHours": function () {},
  "plusMinutes": function () {},
  "plusMonths": function () {},
  "plusNanos": function () {},
  "plusSeconds": function () {},
  "plusTemporalAmount": function () {},
  "plusWeeks": function () {},
  "plusYears": function () {},
  "query": function () {},
  "range": function () {},
  "second": function () {},
  "toEpochSecond": function () {},
  "toInstant": function () {},
  "toJSON": function () {},
  "toLocalDate": function () {},
  "toLocalTime": function () {},
  "toString": function () {},
  "truncatedTo": function () {},
  "until": function () {},
  "with": function () {},
  "with2": function () {},
  "withDayOfMonth": function () {},
  "withDayOfYear": function () {},
  "withHour": function () {},
  "withMinute": function () {},
  "withMonth": function () {},
  "withNano": function () {},
  "withSecond": function () {},
  "withTemporalAdjuster": function () {},
  "withYear": function () {},
  "year": function () {}
};
JSJoda.LocalTime.prototype = {
  "_get0": function () {},
  "adjustInto": function () {},
  "atDate": function () {},
  "compareTo": function () {},
  "equals": function () {},
  "format": function () {},
  "get": function () {},
  "getLong": function () {},
  "hashCode": function () {},
  "hour": function () {},
  "isAfter": function () {},
  "isBefore": function () {},
  "isSupported": function () {},
  "minus": function () {},
  "minus1": function () {},
  "minus2": function () {},
  "minusHours": function () {},
  "minusMinutes": function () {},
  "minusNanos": function () {},
  "minusSeconds": function () {},
  "minute": function () {},
  "nano": function () {},
  "plus": function () {},
  "plus1": function () {},
  "plus2": function () {},
  "plusHours": function () {},
  "plusMinutes": function () {},
  "plusNanos": function () {},
  "plusSeconds": function () {},
  "query": function () {},
  "range": function () {},
  "second": function () {},
  "toJSON": function () {},
  "toNanoOfDay": function () {},
  "toSecondOfDay": function () {},
  "toString": function () {},
  "truncatedTo": function () {},
  "until": function () {},
  "with": function () {},
  "with2": function () {},
  "withHour": function () {},
  "withMinute": function () {},
  "withNano": function () {},
  "withSecond": function () {},
  "withTemporalAdjuster": function () {}
};
JSJoda.Month.prototype = {
  "adjustInto": function () {},
  "compareTo": function () {},
  "equals": function () {},
  "firstDayOfYear": function () {},
  "firstMonthOfQuarter": function () {},
  "get": function () {},
  "getDisplayName": function () {},
  "getLong": function () {},
  "isSupported": function () {},
  "length": function () {},
  "maxLength": function () {},
  "minLength": function () {},
  "minus": function () {},
  "name": function () {},
  "ordinal": function () {},
  "plus": function () {},
  "query": function () {},
  "range": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "value": function () {}
};
JSJoda.MonthDay.prototype = {
  "adjustInto": function () {},
  "atYear": function () {},
  "compareTo": function () {},
  "dayOfMonth": function () {},
  "equals": function () {},
  "format": function () {},
  "get": function () {},
  "getLong": function () {},
  "isAfter": function () {},
  "isBefore": function () {},
  "isSupported": function () {},
  "isValidYear": function () {},
  "month": function () {},
  "monthValue": function () {},
  "query": function () {},
  "range": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "with": function () {},
  "withDayOfMonth": function () {},
  "withMonth": function () {}
};
JSJoda.NullPointerException.prototype = {
  "constructor": function () {},
  "name": function () {}
};
JSJoda.Period.prototype = {
  "addTo": function () {},
  "chronology": function () {},
  "days": function () {},
  "equals": function () {},
  "get": function () {},
  "hashCode": function () {},
  "isNegative": function () {},
  "isZero": function () {},
  "minus": function () {},
  "minusDays": function () {},
  "minusMonths": function () {},
  "minusYears": function () {},
  "months": function () {},
  "multipliedBy": function () {},
  "negated": function () {},
  "normalized": function () {},
  "plus": function () {},
  "plusDays": function () {},
  "plusMonths": function () {},
  "plusYears": function () {},
  "subtractFrom": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "toTotalMonths": function () {},
  "units": function () {},
  "withDays": function () {},
  "withMonths": function () {},
  "withYears": function () {},
  "years": function () {}
};
JSJoda.ResolverStyle.prototype = {
  "equals": function () {},
  "toJSON": function () {},
  "toString": function () {}
};
JSJoda.SignStyle.prototype = {
  "equals": function () {},
  "parse": function () {},
  "toJSON": function () {},
  "toString": function () {}
};
JSJoda.Temporal.prototype = {
  "get": function () {},
  "query": function () {},
  "range": function () {}
};
JSJoda.TemporalAccessor.prototype = {
  "get": function () {},
  "query": function () {},
  "range": function () {}
};
JSJoda.TemporalAdjuster.prototype = {
  "adjustInto": function () {}
};
JSJoda.TemporalAmount.prototype = {
  "addTo": function () {},
  "get": function () {},
  "subtractFrom": function () {},
  "units": function () {}
};
JSJoda.TemporalQuery.prototype = {
  "equals": function () {},
  "queryFrom": function () {},
  "toJSON": function () {},
  "toString": function () {}
};
JSJoda.TemporalUnit.prototype = {
  "addTo": function () {},
  "between": function () {},
  "duration": function () {},
  "isDateBased": function () {},
  "isDurationEstimated": function () {},
  "isSupportedBy": function () {},
  "isTimeBased": function () {}
};
JSJoda.TextStyle.prototype = {
  "asNormal": function () {},
  "asStandalone": function () {},
  "equals": function () {},
  "isStandalone": function () {},
  "toJSON": function () {},
  "toString": function () {}
};
JSJoda.UnsupportedTemporalTypeException.prototype = {
  "constructor": function () {},
  "message": function () {},
  "name": function () {},
  "toString": function () {}
};
JSJoda.ValueRange.prototype = {
  "checkValidIntValue": function () {},
  "checkValidValue": function () {},
  "equals": function () {},
  "hashCode": function () {},
  "isFixed": function () {},
  "isIntValue": function () {},
  "isValidIntValue": function () {},
  "isValidValue": function () {},
  "largestMinimum": function () {},
  "maximum": function () {},
  "minimum": function () {},
  "smallestMaximum": function () {},
  "toString": function () {}
};
JSJoda.Year.prototype = {
  "adjustInto": function () {},
  "atDay": function () {},
  "atMonth": function () {},
  "atMonthDay": function () {},
  "atMonthMonth": function () {},
  "atMonthNumber": function () {},
  "compareTo": function () {},
  "equals": function () {},
  "format": function () {},
  "get": function () {},
  "getLong": function () {},
  "isAfter": function () {},
  "isBefore": function () {},
  "isLeap": function () {},
  "isSupported": function () {},
  "isSupportedField": function () {},
  "isSupportedUnit": function () {},
  "isValidMonthDay": function () {},
  "length": function () {},
  "minus": function () {},
  "minusAmount": function () {},
  "minusAmountToSubtractUnit": function () {},
  "minusYears": function () {},
  "plus": function () {},
  "plusAmount": function () {},
  "plusAmountToAddUnit": function () {},
  "plusYears": function () {},
  "query": function () {},
  "range": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "value": function () {},
  "with": function () {},
  "withAdjuster": function () {},
  "withFieldValue": function () {}
};
JSJoda.YearMonth.prototype = {
  "_getProlepticMonth": function () {},
  "adjustInto": function () {},
  "atDay": function () {},
  "atEndOfMonth": function () {},
  "compareTo": function () {},
  "equals": function () {},
  "format": function () {},
  "get": function () {},
  "getLong": function () {},
  "isAfter": function () {},
  "isBefore": function () {},
  "isLeapYear": function () {},
  "isSupported": function () {},
  "isSupportedField": function () {},
  "isSupportedUnit": function () {},
  "isValidDay": function () {},
  "lengthOfMonth": function () {},
  "lengthOfYear": function () {},
  "minus": function () {},
  "minusAmount": function () {},
  "minusAmountUnit": function () {},
  "minusMonths": function () {},
  "minusYears": function () {},
  "month": function () {},
  "monthValue": function () {},
  "plus": function () {},
  "plusAmount": function () {},
  "plusAmountUnit": function () {},
  "plusMonths": function () {},
  "plusYears": function () {},
  "query": function () {},
  "range": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "until": function () {},
  "with": function () {},
  "withAdjuster": function () {},
  "withFieldValue": function () {},
  "withMonth": function () {},
  "withYear": function () {},
  "withYearMonth": function () {},
  "year": function () {}
};
JSJoda.ZoneId.prototype = {
  "equals": function () {},
  "hashCode": function () {},
  "id": function () {},
  "normalized": function () {},
  "rules": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "systemDefault": function () {}
};
JSJoda.ZoneOffset.prototype = {
  "adjustInto": function () {},
  "compareTo": function () {},
  "equals": function () {},
  "get": function () {},
  "getLong": function () {},
  "hashCode": function () {},
  "id": function () {},
  "normalized": function () {},
  "query": function () {},
  "rules": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "totalSeconds": function () {}
};
JSJoda.ZoneOffsetTransition.prototype = {
  "compareTo": function () {},
  "dateTimeAfter": function () {},
  "dateTimeBefore": function () {},
  "duration": function () {},
  "durationSeconds": function () {},
  "equals": function () {},
  "hashCode": function () {},
  "instant": function () {},
  "isGap": function () {},
  "isOverlap": function () {},
  "isValidOffset": function () {},
  "offsetAfter": function () {},
  "offsetBefore": function () {},
  "toEpochSecond": function () {},
  "toString": function () {},
  "validOffsets": function () {}
};
JSJoda.ZoneRegion.prototype = {
  "equals": function () {},
  "hashCode": function () {},
  "id": function () {},
  "normalized": function () {},
  "rules": function () {},
  "toJSON": function () {},
  "toString": function () {}
};
JSJoda.ZoneRules.prototype = {
  "daylightSavings": function () {},
  "isDaylightSavings": function () {},
  "isFixedOffset": function () {},
  "isValidOffset": function () {},
  "nextTransition": function () {},
  "offset": function () {},
  "offsetOfEpochMilli": function () {},
  "offsetOfInstant": function () {},
  "offsetOfLocalDateTime": function () {},
  "previousTransition": function () {},
  "standardOffset": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "transition": function () {},
  "transitionRules": function () {},
  "transitions": function () {},
  "validOffsets": function () {}
};
JSJoda.ZonedDateTime.prototype = {
  "_resolveInstant": function () {},
  "_resolveLocal": function () {},
  "_resolveOffset": function () {},
  "compareTo": function () {},
  "dayOfMonth": function () {},
  "dayOfWeek": function () {},
  "dayOfYear": function () {},
  "equals": function () {},
  "format": function () {},
  "get": function () {},
  "getLong": function () {},
  "hashCode": function () {},
  "hour": function () {},
  "isAfter": function () {},
  "isBefore": function () {},
  "isEqual": function () {},
  "isSupported": function () {},
  "minus": function () {},
  "minus2": function () {},
  "minusDays": function () {},
  "minusHours": function () {},
  "minusMinutes": function () {},
  "minusMonths": function () {},
  "minusNanos": function () {},
  "minusSeconds": function () {},
  "minusTemporalAmount": function () {},
  "minusWeeks": function () {},
  "minusYears": function () {},
  "minute": function () {},
  "month": function () {},
  "monthValue": function () {},
  "nano": function () {},
  "offset": function () {},
  "plus": function () {},
  "plus2": function () {},
  "plusDays": function () {},
  "plusHours": function () {},
  "plusMinutes": function () {},
  "plusMonths": function () {},
  "plusNanos": function () {},
  "plusSeconds": function () {},
  "plusTemporalAmount": function () {},
  "plusWeeks": function () {},
  "plusYears": function () {},
  "query": function () {},
  "range": function () {},
  "second": function () {},
  "toEpochSecond": function () {},
  "toInstant": function () {},
  "toJSON": function () {},
  "toLocalDate": function () {},
  "toLocalDateTime": function () {},
  "toLocalTime": function () {},
  "toString": function () {},
  "truncatedTo": function () {},
  "until": function () {},
  "with": function () {},
  "with2": function () {},
  "withDayOfMonth": function () {},
  "withDayOfYear": function () {},
  "withEarlierOffsetAtOverlap": function () {},
  "withFixedOffsetZone": function () {},
  "withHour": function () {},
  "withLaterOffsetAtOverlap": function () {},
  "withMinute": function () {},
  "withMonth": function () {},
  "withNano": function () {},
  "withSecond": function () {},
  "withTemporalAdjuster": function () {},
  "withYear": function () {},
  "withZoneSameInstant": function () {},
  "withZoneSameLocal": function () {},
  "year": function () {},
  "zone": function () {}
};
JSJoda._.DateTimeBuilder.prototype = {
  "_addFieldValue": function () {},
  "_addObject": function () {},
  "_checkDate": function () {},
  "_mergeDate": function () {},
  "_mergeTime": function () {},
  "_putFieldValue0": function () {},
  "_resolveInstant": function () {},
  "_resolveTimeInferZeroes": function () {},
  "build": function () {},
  "get": function () {},
  "getFieldValue0": function () {},
  "getLong": function () {},
  "isSupported": function () {},
  "query": function () {},
  "range": function () {},
  "resolve": function () {}
};
JSJoda._.DateTimeParseContext.prototype = {
  "_constructorFormatter": function () {},
  "_constructorParam": function () {},
  "_constructorSelf": function () {},
  "charEquals": function () {},
  "charEqualsIgnoreCase": function () {},
  "copy": function () {},
  "currentParsed": function () {},
  "endOptional": function () {},
  "getEffectiveChronology": function () {},
  "getParsed": function () {},
  "isCaseSensitive": function () {},
  "isStrict": function () {},
  "locale": function () {},
  "setCaseSensitive": function () {},
  "setLocale": function () {},
  "setParsedField": function () {},
  "setParsedLeapSecond": function () {},
  "setParsedZone": function () {},
  "setStrict": function () {},
  "startOptional": function () {},
  "subSequenceEquals": function () {},
  "symbols": function () {},
  "toParsed": function () {}
};
JSJoda._.DateTimePrintContext.prototype = {
  "endOptional": function () {},
  "getValue": function () {},
  "getValueQuery": function () {},
  "locale": function () {},
  "setDateTime": function () {},
  "setLocale": function () {},
  "startOptional": function () {},
  "symbols": function () {},
  "temporal": function () {}
};
JSJoda._.StringBuilder.prototype = {
  "append": function () {},
  "appendChar": function () {},
  "insert": function () {},
  "length": function () {},
  "replace": function () {},
  "setLength": function () {},
  "toString": function () {}
};

/**********************************************************************
 * End Generated Extern for JSJoda
/**********************************************************************/
JSJoda.use;

/*******
following additional 'static' method properties generated from https://github.com/henryw374/cljs.java-time/blob/master/dev/externs.clj
****/

JSJoda.Period
JSJoda.Period.between
JSJoda.Period.parse
JSJoda.Period.ofWeeks
JSJoda.Period.from
JSJoda.Period.ofYears
JSJoda.Period.ofDays
JSJoda.Period.readExternal
JSJoda.Period.ofMonths
JSJoda.Period.between
JSJoda.Period.of
JSJoda.Instant
JSJoda.Instant.from
JSJoda.Instant.readExternal
JSJoda.Instant.now
JSJoda.Instant.now
JSJoda.Instant.parse
JSJoda.Instant.ofEpochSecond
JSJoda.Instant.ofEpochMilli
JSJoda.Instant.ofEpochSecond
JSJoda.Duration
JSJoda.Duration.ofNanos
JSJoda.Duration.ofSeconds
JSJoda.Duration.ofDays
JSJoda.Duration.between
JSJoda.Duration.from
JSJoda.Duration.ofMillis
JSJoda.Duration.ofHours
JSJoda.Duration.ofMinutes
JSJoda.Duration.parse
JSJoda.Duration.readExternal
JSJoda.Duration.of
JSJoda.Duration.ofSeconds
JSJoda.LocalDate
JSJoda.LocalDate.from
JSJoda.LocalDate.timeLineOrder
JSJoda.LocalDate.of
JSJoda.LocalDate.now
JSJoda.LocalDate.parse
JSJoda.LocalDate.from
JSJoda.LocalDate.readExternal
JSJoda.LocalDate.now
JSJoda.LocalDate.parse
JSJoda.LocalDate.of
JSJoda.LocalDate.ofEpochDay
JSJoda.LocalDate.now
JSJoda.LocalDate.ofYearDay
JSJoda.LocalTime
JSJoda.LocalTime.of
JSJoda.LocalTime.parse
JSJoda.LocalTime.ofSecondOfDay
JSJoda.LocalTime.now
JSJoda.LocalTime.now
JSJoda.LocalTime.from
JSJoda.LocalTime.ofNanoOfDay
JSJoda.LocalTime.parse
JSJoda.LocalTime.now
JSJoda.LocalTime.of
JSJoda.LocalTime.readExternal
JSJoda.LocalTime.of
JSJoda.ZonedDateTime
JSJoda.ZonedDateTime.timeLineOrder
JSJoda.ZonedDateTime.from
JSJoda.ZonedDateTime.readExternal
JSJoda.ZonedDateTime.now
JSJoda.ZonedDateTime.now
JSJoda.ZonedDateTime.now
JSJoda.ZonedDateTime.parse
JSJoda.ZonedDateTime.ofLocal
JSJoda.ZonedDateTime.parse
JSJoda.ZonedDateTime.of
JSJoda.ZonedDateTime.of
JSJoda.ZonedDateTime.ofInstant
JSJoda.ZonedDateTime.ofStrict
JSJoda.ZonedDateTime.from
JSJoda.ZonedDateTime.ofInstant
JSJoda.ZonedDateTime.of
JSJoda.LocalDateTime
JSJoda.LocalDateTime.timeLineOrder
JSJoda.LocalDateTime.from
JSJoda.LocalDateTime.of
JSJoda.LocalDateTime.parse
JSJoda.LocalDateTime.from
JSJoda.LocalDateTime.readExternal
JSJoda.LocalDateTime.parse
JSJoda.LocalDateTime.of
JSJoda.LocalDateTime.of
JSJoda.LocalDateTime.of
JSJoda.LocalDateTime.of
JSJoda.LocalDateTime.now
JSJoda.LocalDateTime.now
JSJoda.LocalDateTime.of
JSJoda.LocalDateTime.now
JSJoda.LocalDateTime.ofInstant
JSJoda.LocalDateTime.ofEpochSecond
JSJoda.LocalDateTime.of
JSJoda.Year
JSJoda.Year.parse
JSJoda.Year.now
JSJoda.Year.now
JSJoda.Year.of
JSJoda.Year.isLeap
JSJoda.Year.parse
JSJoda.Year.now
JSJoda.Year.readExternal
JSJoda.Year.from
JSJoda.YearMonth
JSJoda.YearMonth.readExternal
JSJoda.YearMonth.of
JSJoda.YearMonth.now
JSJoda.YearMonth.now
JSJoda.YearMonth.of
JSJoda.YearMonth.now
JSJoda.YearMonth.parse
JSJoda.YearMonth.from
JSJoda.YearMonth.parse
JSJoda.ZoneId
JSJoda.ZoneId.getAvailableZoneIds
JSJoda.ZoneId.of
JSJoda.ZoneId.of
JSJoda.ZoneId.ofOffset
JSJoda.ZoneId.of
JSJoda.ZoneId.from
JSJoda.ZoneId.systemDefault
JSJoda.DayOfWeek
JSJoda.DayOfWeek.valueOf
JSJoda.DayOfWeek.values
JSJoda.DayOfWeek.of
JSJoda.DayOfWeek.from
JSJoda.Month
JSJoda.Month.values
JSJoda.Month.from
JSJoda.Month.valueOf
JSJoda.Month.of
JSJoda.Clock
JSJoda.Clock.system
JSJoda.Clock.systemUTC
JSJoda.Clock.tickMinutes
JSJoda.Clock.tickSeconds
JSJoda.Clock.tick
JSJoda.Clock.fixed
JSJoda.Clock.offset
JSJoda.Clock.systemDefaultZone
JSJoda.ZoneOffset
JSJoda.ZoneOffset.getAvailableZoneIds
JSJoda.ZoneOffset.of
JSJoda.ZoneOffset.of
JSJoda.ZoneOffset.ofOffset
JSJoda.ZoneOffset.of
JSJoda.ZoneOffset.from
JSJoda.ZoneOffset.systemDefault
JSJoda.ZoneOffset.from
JSJoda.ZoneOffset.of
JSJoda.ZoneOffset.ofTotalSeconds
JSJoda.ZoneOffset.readExternal
JSJoda.ZoneOffset.ofHoursMinutesSeconds
JSJoda.ZoneOffset.ofHours
JSJoda.ZoneOffset.ofHoursMinutes
JSJoda.ChronoUnit
JSJoda.ChronoUnit.values
JSJoda.ChronoUnit.valueOf
JSJoda.ChronoField
JSJoda.ChronoField.values
JSJoda.ChronoField.valueOf
JSJoda.TemporalAdjusters
JSJoda.TemporalAdjusters.nextOrSame
JSJoda.TemporalAdjusters.ofDateAdjuster
JSJoda.TemporalAdjusters.dayOfWeekInMonth
JSJoda.TemporalAdjusters.next
JSJoda.TemporalAdjusters.previousOrSame
JSJoda.TemporalAdjusters.firstDayOfNextYear
JSJoda.TemporalAdjusters.lastDayOfYear
JSJoda.TemporalAdjusters.firstDayOfNextMonth
JSJoda.TemporalAdjusters.firstDayOfYear
JSJoda.TemporalAdjusters.lastInMonth
JSJoda.TemporalAdjusters.lastDayOfMonth
JSJoda.TemporalAdjusters.firstInMonth
JSJoda.TemporalAdjusters.firstDayOfMonth
JSJoda.TemporalAdjusters.previous
JSJoda.Temporal
JSJoda.TemporalAmount
JSJoda.DateTimeFormatter
JSJoda.DateTimeFormatter.ofLocalizedDate
JSJoda.DateTimeFormatter.parsedExcessDays
JSJoda.DateTimeFormatter.ofPattern
JSJoda.DateTimeFormatter.ofLocalizedTime
JSJoda.DateTimeFormatter.ofPattern
JSJoda.DateTimeFormatter.ofLocalizedDateTime
JSJoda.DateTimeFormatter.ofLocalizedDateTime
JSJoda.DateTimeFormatter.parsedLeapSecond
JSJoda.ResolverStyle
JSJoda.ResolverStyle.values
JSJoda.ResolverStyle.valueOf